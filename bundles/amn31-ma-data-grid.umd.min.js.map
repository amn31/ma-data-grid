{"version":3,"sources":["../../../projects/ma-data-grid/src/lib/interfaces/ma-data-grid-options.ts","../../../projects/ma-data-grid/src/lib/components/data-grid-op-filter/data-grid-op-filter.component.html","../../../projects/ma-data-grid/src/lib/components/data-grid-op-filter/data-grid-op-filter.component.ts","../../../projects/ma-data-grid/src/lib/components/data-grid-picker-date/data-grid-picker-date.component.ts","../../../projects/ma-data-grid/src/lib/components/data-grid-head-filter/data-grid-head-filter.component.html","../../../projects/ma-data-grid/src/lib/components/data-grid-picker-date/data-grid-picker-date.component.html","../../../projects/ma-data-grid/src/lib/components/data-grid-head-filter/data-grid-head-filter.component.ts","../../../node_modules/tslib/tslib.es6.js","../../../projects/ma-data-grid/src/lib/ma-grid-filter.component.html","../../../projects/ma-data-grid/src/lib/ma-grid-filter.component.ts","../../../projects/ma-data-grid/src/lib/directives/ma-grid-cell-template.directive.ts","../../../projects/ma-data-grid/src/lib/components/data-grid-cell-item/data-grid-cell-item.component.ts","../../../projects/ma-data-grid/src/lib/components/data-grid-template-cell/data-grid-template-cell.component.ts","../../../projects/ma-data-grid/src/lib/components/data-grid-cell-boolean/data-grid-cell-boolean.component.ts","../../../projects/ma-data-grid/src/lib/pipes/data-grid-pipe.pipe.ts","../../../projects/ma-data-grid/src/lib/ma-data-grid.component.html","../../../projects/ma-data-grid/src/lib/ma-data-grid.component.ts","../../../projects/ma-data-grid/src/lib/directives/ma-anchor-grid-cell.directive.ts","../../../projects/ma-data-grid/src/lib/ma-data-grid.module.ts"],"names":["options_header_boolean","value","operator","label","options_header_string","options_header_number","options_header_date","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵelement","i0.ɵɵproperty","i0.ɵɵlistener","i0.ɵɵtemplate","opt_r4","checked","i0.ɵɵtextInterpolate1","DataGridOpFilterComponent","this","changeOperator","EventEmitter","changeEmptyOperator","options","multiple","isRowHTML","values","popupPosition","top","left","prototype","getFuncClickDocument","p","fct","elemToggle","nativeElement","style","display","$","document","off","toggleDiv","onClickDocument","position","anchor","elemValue","parentElement","height","offset","setTimeout","on","ngOnInit","col","dataType","headFilter","prop","i","getOperator","_this","find","d","changeValues","opt","splice","push","length","_changeOperator","getConditions","filter_value","o","replace","conditions","v","changeValue","match","emit","selectors","viewQuery","rf","ctx","i0.ɵɵstyleProp","DataGridPickerDateComponent","datevalue","realValue","time","changePicker","datepicker_id","Math","floor","random","ngAfterViewInit","_init","ngOnDestroy","instance","destroy","getDate","setDate","date","Date","getTimezoneOffset","getTime","elem","getElementById","toISOString","setTime","hour","min","ptr","type","M.Datepicker","init","autoClose","format","onSelect","onchange","e","emitDateEvent","M.Timepicker","twelveHour","h","m","emitTimeEvent","onChange","$event","i0","ɵɵrestoreView","_r4_1","ɵɵnextContext","DataGridHeadFilterComponent","changeHeaderFilter","astuce_datapicker","getFilter","op_filter","_changeEmptyOperator","madate_picker","event","_changeDate","i0.ɵɵstyleMap","Object","create","__values","s","Symbol","iterator","call","next","done","TypeError","MaGridFilterComponent","placeholder","customCSS","searchValueChange","columns","filterChange","input_filter","filters","selectedFields","ngOnChanges","changes","searchValue","val","currentValue","_b","_c","extFilter","extFilterSelected","assign","enableFocus","M.updateTextFields","clickChekbox","updateFilter","focus","blur","text","fields","inputs","outputs","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","i0.ɵɵclassMapInterpolate1","MaGridCellTemplateDirective","viewContainerRef","ɵɵdirectiveInject","ViewContainerRef","DataGridCellItemComponent","component","data","DataGridTemplateCellComponent","componentFactoryResolver","componentFactory","resolveComponentFactory","libMaGridCellTemplate","createComponent","ComponentFactoryResolver","DataGridCellBooleanComponent","icon","DataGridPipePipe","transform","row","pipe","_r12_1","_filterChange","ctx_r0","pure","i0.ɵɵclassMapInterpolate2","row_r32","col_r38","MaDataGridComponent","limit","pagination","page","count","rows","change","select","extFilterChange","changePage","sort","canSelectChange","grid_cell_first","grid_row_selected","current_page","max_page","max_nb_page","nb_page","startat","rows_displayed","pages","nb_record","row_selected","cell_selected","sortedField","field","reverse","timeout","resetSelection","canSelect","previousValue","temp","_changePage","IncrementPage","DecrementPage","FastIncrementPage","FastDecrementPage","n_page","force","MaFilter","FilterByConditions","_sortData","start_page","round","nbp","sf","a","b","r","c3","c4","localeCompare","sensitivity","c1","c2","sortBy","SelectRow","index","trueIndex","SelectCell","_changeHeaderFilter","clearTimeout","_delayChangeHeaderFilter","headerfilter","forEach","item","condition","where","MaAnchorGridCellDirective","MaDataGridModule","imports","CommonModule","FormsModule","declarations","exports"],"mappings":"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","sourcesContent":["//import { Type } from '@angular/core';\n\nimport { FilterConditions } from \"@amn31/filter-multiple-conditions\";\nimport { Type } from \"@angular/core\";\nimport { MaDataGridCell } from \"./ma-data-grid-cell\";\n\n\nexport type MaDataGridSelectMethod = 'row' | 'cell'\nexport interface MaDataGridSelectEvent {\n  index: number;\n  row: any;\n  value?: any;\n  prop?: string;\n}\n\nexport interface MaDataGridHeadFilterEvent {\n  where: FilterConditions,\n  data?: [];\n}\n\nexport interface MaDataGridColumnOptions {\n\n  title?: string;\n  cssClass?: string;\n  isRowNumber?: boolean;\n  isRowHTML?: boolean;\n  prop: string;\n  sorted?: boolean;\n  extFilter?: boolean;\n  dataType?: 'boolean' | 'number' | 'date' | 'string' | 'datetime' | 'time';\n  headFilter?: MaDataGridHeadFilter[];\n  opDefautFilter?: string;\n  extFilterSelected?: boolean;\n  pipe?: (value, row, col) => {};\n  useTemplate?: Type<MaDataGridCell>\n}\n\nexport interface MaDataGridHeadFilter {\n  value: string;\n  operator: string;\n  label?: string;\n}\n\nexport const options_header_boolean: MaDataGridHeadFilter[] = [{\n  value: '1',\n  operator: '=',\n  label: 'true'\n}, {\n  value: '0',\n  operator: '=',\n  label: 'false'\n}, {\n  value: 'a',\n  operator: 'isnull',\n  label: 'NULL'\n}, {\n  value: 'a',\n  operator: 'isnotnull',\n  label: '!NULL'\n},];\n\nexport const options_header_string: MaDataGridHeadFilter[] = [\n  {\n    value: '',\n    operator: '',\n    label: ''\n  }, {\n    value: '%${1}%',\n    operator: 'like',\n    label: 'contains',\n  }, {\n    value: '%${1}%',\n    operator: 'not like',\n    label: 'without',\n  }, {\n    value: '${1}%',\n    operator: 'like',\n    label: 'startswith'\n  }, {\n    value: '${1}%',\n    operator: 'not like',\n    label: 'not start'\n  }, {\n    value: '%${1}',\n    operator: 'like',\n    label: 'endswith',\n  }, {\n    value: '%${1}',\n    operator: 'not like',\n    label: 'not end',\n  }];\n\nexport const options_header_number: MaDataGridHeadFilter[] = [{\n  value: '',\n  operator: '',\n  label: ''\n}, {\n  value: '${1}',\n  operator: '=',\n  label: '=='\n}, {\n  value: '${1}',\n  operator: '>',\n  label: '>'\n}, {\n  value: '${1}',\n  operator: '>=',\n  label: '>='\n}, {\n  value: '${1}',\n  operator: '<=',\n  label: '<=',\n}, {\n  value: '${1}',\n  operator: '<',\n  label: '<',\n}];\n\nexport const options_header_date: MaDataGridHeadFilter[] = [{\n  value: '',\n  operator: '',\n  label: ''\n}, {\n  value: '${1}',\n  operator: '=',\n  label: '=='\n}, {\n  value: '${1}',\n  operator: '>',\n  label: '>'\n}, {\n  value: '${1}',\n  operator: '>=',\n  label: '>='\n}, {\n  value: '${1}',\n  operator: '<=',\n  label: '<=',\n}, {\n  value: '${1}',\n  operator: '<',\n  label: '<',\n}];\n\nexport interface MaDataGridFilterEvent {\n  text: string;\n  fields: string[]\n}\n\n// export class MaData {\n  \n//   static FilterByConditions(where, temp: any) {\n//     // console.log('DEAL findFull ==== ', where);\n\n//     if (!where || where.length == 0) {\n//       return temp;\n//     }\n\n//     var result = [];\n//     for (var i = 0; i < where.length; i++) {\n//       var condition = where[i];\n//       let temp1;\n//       // console.log('DEAL typeof(condition)' + typeof (condition), condition);\n//       if (typeof (condition) == 'object') {\n//         if (condition.length == 3 &&\n//           typeof (condition[0]) == 'string' && typeof (condition[1]) == 'string' &&\n//           (typeof (condition[2]) == 'string' || typeof (condition[2]) == 'number')) {\n//           // console.log(\"DEAL TO FIND \", temp.length)\n//           temp1 = this._filterResultBySimpleCondition(condition, temp);\n//         } else if (condition.length > 0 && condition.find(d => typeof (d) == 'object')) {\n//           temp1 = this.FilterByConditions(condition, temp);\n//         }\n//       } else {\n//         if (typeof (condition) == 'string') {\n//           if (condition != 'or' && condition != 'and') {\n//             throw (\"Unexpected condition :\" + condition)\n//           }\n//         }\n//       }\n//       if (temp1) {\n//         // console.log('DEAL TODO', temp1.length);\n//         // Cas où l'operator précédent était 'or'\n//         if (where[i + 1] && where[i + 1] == 'or' || (i == where.length - 1 && where[i - 1] && where[i - 1] == 'or')) {\n//           // On ajoute au result les valeurs non trouvées précédemment\n//           for (var t of temp1) {\n//             //console.log(t);\n//             if (!(result.find(d => d === t))) {\n//               result.push(t);\n//             }\n//           }\n//           // console.log(\"DEAL TODO OR\", result)\n\n//           // Cas où l'operator précédent était 'and'\n//         } else {\n//           // console.log(\"DEAL TODO AND\", temp1);\n//           // On ecrase temp\n//           temp = temp1;\n//           result = temp;\n//         }\n//       }\n\n//       i++;\n//     }\n//     return result;\n//   }\n \n\n//   private static _filterResultBySimpleCondition(condition, temp: any) {\n//     console.log('DEAL findTemp === ', condition)\n//     if (typeof (condition) == 'object') {\n//       var field = condition[0];\n//       var operator = condition[1];\n//       var value = condition[2];\n//       let reg : any = null;\n//       let opnum = false;\n//       let reverse = false;\n//       console.log('field (1):' + field, operator, value)\n//       if (operator == 'startswith') {\n//         reg = new RegExp(\"^\" + value, 'i');\n//       } else if (operator == 'endswith') {\n//         reg = new RegExp(value + \"$\", 'i');\n//       } else if (operator == 'contains') {\n//         reg = new RegExp(value, 'i');\n//       } else if (operator == 'like' || operator == 'not like') {\n//         if (operator == 'not like') {\n//           reverse = true;\n//         }\n//         if (value.match(/^%.+%$/)) {\n//           value = value.replace(/^%/, '').replace(/%$/, '')\n//           operator = 'contains'\n//           reg = new RegExp(value, 'i');\n//         } else if (value.match(/.+%$/)) {\n//           value = value.replace(/%$/, '')\n//           operator = 'startswith'\n//           reg = new RegExp(\"^\" + value, 'i');\n//         } else if (value.match(/^%/)) {\n//           value = value.replace(/^%/, '')\n//           operator = 'endswith'\n//           reg = new RegExp(value + \"$\", 'i');\n//         }\n//       } else if (operator == 'regex') {\n//         reg = new RegExp(value, 'i');\n//       } else if (operator == 'notRegex') {\n//         reg = new RegExp(value, 'i');\n//         reverse = true;\n//       } else if (operator == 'isnull') {\n//       } else if (operator == 'isnotnull') {\n//       } else if (operator == '=') {\n//         opnum = true;\n//       } else if (operator == '>=') {\n//         opnum = true;\n//       } else if (operator == '>') {\n//         opnum = true;\n//       } else if (operator == '<') {\n//         opnum = true;\n//       } else if (operator == '!=') {\n//         opnum = true;\n//       } else if (operator == '<=') {\n//         opnum = true;\n//       } else {\n//         throw (\"Unkown operator \" + operator)\n//       }\n\n//       console.log('field:' + field, operator, value, reg)\n//       temp = temp.filter(function (d, index, array) {\n//         //console.log(d[field])\n//         if (reg == null) {\n//           if (opnum && typeof (d[field]) == 'number') {\n//             value = parseFloat(value)\n//           }\n//           if (operator == '=') {\n//             if (typeof (d[field]) == 'boolean') {\n//               if (value == '1')\n//                 value = true;\n//               if (value == '0')\n//                 value = false;\n//             }\n//             if (d[field] !== null) {\n//               if (d[field] === value) {\n//                 return true;\n//               }\n//             }\n//           } else if (operator == 'isnull') {\n//             if (d[field] == null) {\n//               return true;\n//             }\n//           } else if (operator == 'isnotnull') {\n//             if (d[field] != null) {\n//               return true;\n//             }\n//           } else if (operator == '>=') {\n//             if (d[field] !== null && d[field] >= value) {\n//               return true;\n//             }\n//           } else if (operator == '>') {\n//             if (d[field] !== null && d[field] > value) {\n//               return true;\n//             }\n//           } else if (operator == '!=') {\n//             if (d[field] !== null && d[field] != value) {\n//               return true;\n//             }\n//           } else if (operator == '<=') {\n//             if (d[field] !== null && d[field] <= value) {\n//               return true;\n//             }\n//           } else if (operator == '<') {\n//             if (d[field] !== null && d[field] < value) {\n//               return true;\n//             }\n//           }\n//         } else {\n//           if (d[field] && d[field].match(reg)) {\n//             if (reverse) {\n//               return false;\n//             }\n//             return true;\n//           }\n\n//         }\n//         if (reverse) {\n//           return true;\n//         }\n//         return false;\n//       })\n//     }\n//     return temp;\n//   }\n\n// }","<!--\n<div class=\"red\">=</div>(onComplete)=\"onComplete($event)\"\n\n<app-ma-completion [data]=\"choices\" placeholder=\"\" value=\"defautValue\"  ></app-ma-completion>\n     <select dir=\"rtl\">\n    <option>Foo</option>    \n    <option>bar</option>\n    <option>to the right</option>\n</select>\n\n\n<div *ngIf=\"col.isRowNumber === true; then RowNumberBlock else dataBlock\"></div>\n<ng-template #RowNumberBlock>{{i}}</ng-template>\n<ng-template #dataBlock> {{u[col.prop] | dataGridPipe :u :c}}</ng-template>\n-->\n\n<div>\n\n    <div #elemValue (click)=\"toggleDiv()\" class=\"op_label\"><i *ngIf=\"label == ''\" class=\"tiny material-icons\">search</i>{{label}}\n    </div>\n    <div #elemToggle style=\"display: none; z-index: 20; max-height: 300px; overflow-y: auto; background-color: aliceblue;border: 1px solid #9e9e9e;\" [style.left.px]=\"popupPosition.left\"\n    [style.top.px]=\"popupPosition.top\">\n        <div *ngFor=\"let opt of options;\" class=\"op_filter\" [value]=\"opt.value\">\n            <div *ngIf=\"multiple === true\">\n                <label>\n                    <input type=\"checkbox\" class=\"op_filter\" [value]=\"opt.value\" [checked]=\"opt.checked\" (click)=\"changeValues(opt)\" />\n                    <span *ngIf=\"!isRowHTML\">{{opt.label}}</span>\n                    <span *ngIf=\"isRowHTML === true\" [innerHTML]=\"opt.label\"></span>\n                </label>\n            </div>\n            <div *ngIf=\"multiple === false\">\n                <div (click)=\"changeValue(opt)\">{{opt.label}}&nbsp;</div>\n            </div>\n        </div>\n    </div>\n\n</div>\n<!--\n<select class=\"browser-default op_filter\" [(ngModel)]=\"value\" (change)=\"_changeOperator($event)\" >\n    <option *ngFor=\"let opt of options;\"  class=\"op_filter\" [value]=\"opt.value\">{{opt.label}}\n    </option>\n</select>\n\n\n-->","import { Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { MaDataGridColumnOptions, MaDataGridHeadFilter, options_header_boolean, options_header_date, options_header_number, options_header_string } from '../../interfaces/ma-data-grid-options';\nimport * as M from 'materialize-css';\nimport * as $ from 'jquery';\n\nconst defaut_label = ''\n@Component({\n  selector: 'ma-data-grid-op-filter',\n  templateUrl: './data-grid-op-filter.component.html',\n  styleUrls: ['./data-grid-op-filter.component.css']\n})\nexport class DataGridOpFilterComponent implements OnInit {\n\n  @Input() value = '';\n  @Input() col: MaDataGridColumnOptions;\n  @ViewChild(\"elemToggle\", { static: false }) elemToggle: ElementRef;\n  @ViewChild(\"elemValue\", { static: false }) elemValue: ElementRef;\n  @Output() changeOperator = new EventEmitter<any>();\n  @Output() changeEmptyOperator = new EventEmitter<any>();\n  \n  options = null;\n  multiple = false;\n  isRowHTML: boolean = false;\n  values: MaDataGridHeadFilter[] = [];\n  label = defaut_label;\n  popupPosition: any = {\n    top: 0,\n    left: 0\n  }\n  \n  \n  constructor() { \n    \n  }\n\n   getFuncClickDocument() {\n    let p = this;\n    let fct = function () {\n      // console.log('CLICK',fct);\n      p.elemToggle.nativeElement.style.display = 'none';\n      $(document).off('click',fct)\n    }\n    return fct\n  }\n\n  toggleDiv() {\n   \n    var onClickDocument = this.getFuncClickDocument()\n    $(document).off('click',onClickDocument);\n\n    if (this.elemToggle.nativeElement.style.display == 'none') {\n      \n      this.elemToggle.nativeElement.style.position = 'absolute';\n      this.elemToggle.nativeElement.style.display = 'block';\n      let anchor = this.elemValue.nativeElement.parentElement;\n      this.elemToggle.nativeElement.style.top = ($(anchor).height()+$(anchor).offset().top)+'px';\n      this.elemToggle.nativeElement.style.left = $(anchor).offset().left+'px';\n      setTimeout(function () {\n         $(document).on('click',onClickDocument)\n      },500)\n      \n    } else {\n      this.elemToggle.nativeElement.style.display = 'none';\n      $(document).off('click',onClickDocument)\n    }\n\n  }\n\n  ngOnInit(): void {\n    \n    this.isRowHTML = this.col.isRowHTML;\n    if (this.col.dataType == 'string') {\n      this.options = options_header_string;\n    }\n    if (this.col.dataType == 'boolean') {\n      this.multiple = true;\n      this.options = options_header_boolean;\n    }\n    if (this.col.dataType == 'number') {\n      this.options = options_header_number;\n    }\n    if (this.col.dataType == 'date') {\n      this.options = options_header_date;\n    }\n    if (this.col.headFilter) {\n      this.options = this.col.headFilter;\n      this.multiple = true;\n    }\n    if (this.options == null)\n      throw ('Bad definition to operator ' + this.col.prop);\n    //if (this.multiple) {\n    for (var i in this.options) {\n      this.options[i].checked = false;\n    }\n    //}\n\n    //var elems = document.querySelectorAll('select');\n    //var instances = M.FormSelect.init(elems, {});\n    //console.log('M',instances)\n  }\n\n  getOperator() {\n    if (this.multiple === false) {\n      // console.log('getOperator ' + this.col.prop + ' value ' + this.value, this.options)\n      if (this.value == '') {\n        return null;\n      }\n      return this.options.find((d) => d.value === this.value && d.checked == true);\n    }\n    return null;\n  }\n\n  changeValues(opt) {\n    if (opt.checked) {\n      // console.log(\"checked\");\n      opt.checked = false;\n      //this.values.splice(this.values.find((a) => a.value === opt.value && a.operator === opt.operator),1);\n    } else {\n      opt.checked = true;\n      //this.values.push(opt);\n    }\n    this.values.splice(0);\n    for (var i in this.options) {\n      if (this.options[i].checked === true) {\n        this.values.push(this.options[i]);\n      }\n\n    }\n    this.label = '(' + this.values.length + ')';\n    if (this.values.length == 0)\n      this.label = defaut_label;\n    //this.toggleDiv();\n    // console.log('changeValue OP', this.values);\n    this._changeOperator();\n  }\n\n  getConditions(filter_value) {\n    if (this.multiple == false) {\n      let o = this.getOperator();\n      // console.log('getFilter ' + this.col.prop + \" o\", o)\n      if (o != null && o.operator != '') {\n        let value = o.value.replace('${1}', filter_value)\n        //if (this.col.dataType == 'number') {\n        //  value = parseFloat(value);\n        //}\n        return [this.col.prop, o.operator, value]\n      }\n    } else {\n      if (this.values.length > 0) {\n        let conditions = [];\n        for (var i = 0; i < this.values.length; i++) {\n          let v = this.values[i].value;\n          //if (this.col.dataType == 'number') {\n          //  v = parseFloat(v);\n          //}\n          conditions.push([this.col.prop, this.values[i].operator, v]);\n          if (this.values.length - 1 > i) {\n            conditions.push('or')\n          }\n        }\n        return conditions;\n      }\n    }\n    return null;\n  }\n\n  changeValue(opt) {\n    // console.log(\"ChangeValue\",opt);\n    if (this.options.find((d) => d.checked === true)) {\n      this.options.find((d) => d.checked === true).checked = false;\n    }\n\n    if (opt.checked) {\n      // console.log(\"checked\");\n      opt.checked = false;\n      //this.values.splice(this.values.find((a) => a.value === opt.value && a.operator === opt.operator),1);\n    } else {\n      opt.checked = true;\n      //this.values.push(opt);\n    }\n    if (opt.label.match(/^\\s+$/)) {\n      this.value = '';\n      this.label = '';\n    } else {\n      this.value = opt.value;\n      this.label = opt.label;\n    }\n\n    // console.log('changeValue OP', this.options);\n    this.toggleDiv();\n    this._changeOperator();\n    if (opt.operator == '') {\n      this.changeEmptyOperator.emit();\n    }\n  }\n\n  _changeOperator() {\n    // console.log('EMIT OP', this.options)\n    this.changeOperator.emit({\n      prop: this.col,\n      //  condition: [ this.col.prop, this.value ]\n    });\n  }\n}\n","import { AfterViewInit, Component, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport * as M from 'materialize-css';\n\n@Component({\n  selector: 'ma-data-grid-datepicker',\n  templateUrl: './data-grid-picker-date.component.html',\n  styleUrls: ['./data-grid-picker-date.component.css']\n})\nexport class DataGridPickerDateComponent implements OnInit, OnDestroy, AfterViewInit {\n\n  instance: any;\n  datevalue: Date = null;\n  realValue: string = \"\";\n  time: string = '';\n  @Input() value : string = '';\n  @Input() type: 'date' | 'time';\n  @Output() changePicker = new EventEmitter<any>();\n\n  datepicker_id: string = \"dp_\" + Math.floor((Math.random() * 100000));\n  @ViewChild(\"madatepicker\", { static: false }) madatepicker: ElementRef;\n\n  constructor() { }\n  ngAfterViewInit(): void {\n    this._init();\n  }\n  ngOnDestroy(): void {\n    if (this.instance)\n      this.instance.destroy();\n  }\n\n  ngOnInit(): void {\n    // console.log('ngOnInit this.madatepicker');\n    if (this.value == '') {\n      this.datevalue = null\n    }\n  }\n\n  getDate() {\n    return this.datevalue;\n  }\n\n  setDate(date) {\n    \n    if (date != null) {\n      const offset = new Date().getTimezoneOffset()\n      date = new Date(date.getTime() - (offset*60*1000))\n    }\n    var elem = <HTMLInputElement> document.getElementById(this.datepicker_id);\n    if (date == null) {\n      elem.value = '';\n    } else {\n      elem.value = date.toISOString().replace(/T.+/,'')\n    }\n    this.datevalue = date;\n    // console.log(\"setDate VALUE\", this.datevalue);\n  }\n\n  getTime() {\n    return this.time\n  }\n\n  setTime(hour, min) {\n    if (hour < 10) {\n      hour = '0' + hour\n    }\n    if (min < 10) {\n      min = '0' + min\n    }\n    this.time = hour + ':' + min;\n    // console.log(\"VALUE\", this.time);\n  }\n\n  _init(): void {\n    //var elems = document.querySelectorAll('.ma-data-grid-datepicker');\n    var elem = <HTMLInputElement> document.getElementById(this.datepicker_id);\n    var ptr = this;\n    \n    if (this.type == 'date') {\n      var instances = M.Datepicker.init(elem, {\n        autoClose: true,\n        format: 'yyyy-mm-dd',\n        onSelect: function (d) {\n          ptr.setDate(d);\n        }\n        //minDate: new Date(),\n        //maxDate: new Date(),\n      });\n      elem.onchange = function (e) {\n        // console.log(\"EVENT\", elem.value);\n        if (elem.value == '' || !elem.value.match(/^\\d\\d\\d\\d-\\d\\d-\\d\\d$/)) {\n          elem.value = ''\n          ptr.setDate(null);\n        }\n        ptr.emitDateEvent();\n\n      };\n      \n    } else {\n      var instances = M.Timepicker.init(elem, {\n        autoClose: true,\n        //format: 'yyyy-mm-dd',\n        twelveHour: false,\n        onSelect: function (d, h, m) {\n          //console.log(\"G\",d,h,m)\n          ptr.setTime(d, h);\n          ptr.emitTimeEvent();\n        }\n      });\n    }\n\n    //this.instance= instances[0];\n    //this.instance.setDate(new Date());\n    //instance.gotoDate(new Date());\n  }\n\n  onChange() {\n    // console.log(\"realValue\" + this.realValue);\n    if (this.type == 'date') {\n      this.changePicker.emit(this.datevalue);\n    } else {\n      this.changePicker.emit(this.time);\n    }\n  }\n\n  emitDateEvent() {\n    this.changePicker.emit(this.datevalue);\n  }\n\n  emitTimeEvent() {\n    this.changePicker.emit(this.time);\n  }\n\n}\n","<table>\n    <tr>\n        <td class=\"header_filter_op\" >\n            <ma-data-grid-op-filter #op_filter [col]=\"col\" (changeEmptyOperator)=\"_changeEmptyOperator()\" (changeOperator)=\"_changeOperator($event)\"></ma-data-grid-op-filter>\n        </td>\n        <td class=\"header_filter\" *ngIf=\"col.dataType != 'date' && col.dataType != 'boolean' && (!col.headFilter || col.headFilter.length == 0)\">\n            <input class=\"header_filter\" [(ngModel)]=\"filter_value\" (keyup)=\"_changeOperator($event)\" />\n        </td>\n        <td class=\"header_filter\" [style]=\"astuce_datapicker\" >\n            <ma-data-grid-datepicker #madate_picker type=\"date\" (changePicker)=\"_changeDate($event)\"></ma-data-grid-datepicker>\n        </td>\n    </tr>\n</table>","\n    <!-- [(ngModel)]=\"realValue\"   -->\n    <input \n        [id]=\"datepicker_id\" \n        #madatepicker type=\"text\" \n        [(ngModel)]=\"realValue\"\n        class=\"ma-data-grid-datepicker datepicker\">\n\n","import { ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { MaDataGridColumnOptions } from '../../interfaces/ma-data-grid-options';\nimport { DataGridOpFilterComponent } from '../data-grid-op-filter/data-grid-op-filter.component';\nimport { DataGridPickerDateComponent } from '../data-grid-picker-date/data-grid-picker-date.component';\n\n@Component({\n  selector: 'ma-data-grid-head-filter',\n  templateUrl: './data-grid-head-filter.component.html',\n  styleUrls: ['./data-grid-head-filter.component.css']\n})\nexport class DataGridHeadFilterComponent implements OnInit {\n\n  @Input() filter_value : string = '';\n  @Input() col: MaDataGridColumnOptions;\n  @Output() changeHeaderFilter = new EventEmitter<any>();\n  @ViewChild(DataGridOpFilterComponent, { static: true }) op_filter: DataGridOpFilterComponent;\n  @ViewChild(DataGridPickerDateComponent, { static: true }) madate_picker: DataGridPickerDateComponent;\n  astuce_datapicker: string = 'display: none';\n\n  constructor() { }\n\n  ngOnInit(): void {\n    if (this.col.dataType == 'date') {\n      this.astuce_datapicker = 'display: block';\n    }\n  }\n\n  getFilter () {\n    if (this.filter_value != '' || this.col.dataType == 'boolean' || this.col.headFilter != null) {\n     \n      let o = this.op_filter.getConditions(this.filter_value);\n      // console.log('getConditions '+this.col.prop+ \" o\",o)\n      return o;\n    }\n    return null;\n  }\n\n  _changeEmptyOperator() {\n    // console.log(\"_changeEmptyOperator\");\n    this.madate_picker.setDate(null);\n  }\n\n  _changeOperator(event) {\n   \n    // console.log('RECEIVE CHANGE OP',event)\n    // console.log('EMIT changeHeaderFilter');\n    \n    this.changeHeaderFilter.emit({\n      prop:this.col,\n      value: this.filter_value,\n      //condition: [ this.col.prop, this.op_filter.value, this.filter_value ]\n    });\n  }\n\n  _changeDate(date) {\n    \n    this.filter_value = '';\n    try {\n      this.filter_value= date.toISOString();\n      \n    } catch (e) {\n\n    }\n \n    // console.log(\"_changeDate\",this.filter_value);\n    this.changeHeaderFilter.emit({\n      prop:this.col,\n      value: this.filter_value,\n      //condition: [ this.col.prop, this.op_filter.value, this.filter_value ]\n    });\n  }\n\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","<div class=\"row ma-grid-filter\">\n    <div class=\"input-field col s3\"  >\n        <i (click)=\"enableFocus()\" class=\"material-icons prefix\">search</i>\n          <input [id]=\"input_filter\" type=\"text\" class=\"validate\" (keyup)=\"updateFilter($event)\">\n          <label for=\"icon_prefix\">{{placeholder}}</label>\n    </div>\n    <div class=\"col s8 {{customCSS}}ma-grid-filter-checkboxes\">\n        <div class=\"title_field\"> Select column(s) filter</div>\n        <!--  [disabled]=\"selectedFields.length == 0\"\n<span *ngFor=\"let col of columns\"> {{col.prop}} | </span>\n[(ngModel)]=\"col.extFilterSelected\" \n[ngClass]=\"{'disabled':selectedFields.length >= 0}\"\n        -->\n        <div class=\"checkbox_field\" *ngFor=\"let col of filters;last as isLast;index as i;\">\n            <label *ngIf=\"col.extFilter === true\">\n                <input type=\"checkbox\" [checked]=\"col.extFilterSelected\" (click)=\"clickChekbox(col)\" />\n                <span class=\"checkbox_title\">{{col.title}}</span>\n                <span *ngIf=\"!isLast\" class=\"checkbox_separator\">|</span>\n            </label>\n        </div>\n    </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output, SimpleChanges } from '@angular/core';\nimport *  as $ from 'jquery';\nimport *  as M from 'materialize-css';\nimport { MaDataGridFilterEvent, MaDataGridColumnOptions } from './interfaces/ma-data-grid-options';\n\n@Component({\n  selector: 'ma-data-grid-filter',\n  templateUrl: './ma-grid-filter.component.html',\n  styleUrls: ['./ma-grid-filter.component.css']\n})\nexport class MaGridFilterComponent implements OnInit {\n  \n\n  constructor() { }\n\n  \n  placeholder = 'Enter filter'\n  @Input() searchValue: string;\n  @Input() customCSS:  string = \"\";\n  @Output() searchValueChange = new EventEmitter();\n  @Input() columns: MaDataGridColumnOptions[] = [];\n  @Output() filterChange = new EventEmitter<MaDataGridFilterEvent>();\n  input_filter: string = \"if_\"+Math.floor((Math.random()* 100000));\n  filters: any[] = [];\n  selectedFields = [];\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this._init();\n    // binding : datagrid -> datagrid-filter\n    // Le datagrid est en binding dans le 2 sens grace à [(searchValue)]=\"searchValue\"\n    // et le code qui suit\n    if (changes.searchValue) {\n        // console.log(\"changes.searchValue \"+this.searchValue);\n        $('#'+this.input_filter).val(changes.searchValue.currentValue);\n    }\n  }\n\n  _init() {\n\n    this.filters = [];\n    this.selectedFields = [];\n    for (let col of this.columns) {\n      if (col.extFilter === true) {\n        if (col.extFilterSelected) {\n          this.selectedFields.push(col.prop);\n        }\n        this.filters.push(Object.assign(col));\n      }\n    }\n    this.enableFocus();\n    \n    // console.log('filters =================================', this.filters, this.selectedFields)\n  }\n\n  ngOnInit(): void {\n    // console.log('ngOnInit =================================')\n    this._init();\n    M.updateTextFields(); \n    \n  }\n\n  clickChekbox(col) {\n    \n    // console.log(col);\n    col.extFilterSelected = !col.extFilterSelected;\n    this._init();\n    this.updateFilter(null);\n  }\n\n  enableFocus() {\n    if (this.selectedFields.length > 0) {\n      $('#'+this.input_filter).focus();\n    } else {\n      $('#'+this.input_filter).blur();\n    }\n  }\n\n  updateFilter(event:any) {\n    // console.log('updateFilter =================================',event);\n    \n    const val = $('#'+this.input_filter).val(); //event.target.value.toLowerCase();\n    // binding: datagrid-filter -> datagrid \n    // Le datagrid est en binding dans le 2 sens grace à [(searchValue)]=\"searchValue\"\n    // et le code qui suit\n    this.searchValue = val;\n    this.searchValueChange.emit(this.searchValue)\n    let e : MaDataGridFilterEvent = {\n      text: val, fields: this.selectedFields\n    }\n    this.filterChange.emit(e);\n  }\n\n}\n\n","import { ViewContainerRef } from '@angular/core';\nimport { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[libMaGridCellTemplate]'\n})\nexport class MaGridCellTemplateDirective {\n\n  constructor(public viewContainerRef: ViewContainerRef) { }\n\n}\n","import { Type } from '@angular/core';\n\nexport class DataGridCellItemComponent {\n\n  constructor(public component: Type<any>, public data: any) {}\n\n}\n","import { ComponentFactoryResolver, Input, ViewChild } from '@angular/core';\nimport { Type } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { MaGridCellTemplateDirective } from '../../directives/ma-grid-cell-template.directive';\nimport { DataGridCellItemComponent } from '../data-grid-cell-item/data-grid-cell-item.component';\n\n@Component({\n  selector: 'ma-data-grid-template-cell-t1',\n  template: '<ng-template libMaGridCellTemplate></ng-template>'\n})\nexport class DataGridTemplateCellComponent implements OnInit {\n\n  @Input() data: any;\n  @Input() template: Type<any>;\n  @ViewChild(MaGridCellTemplateDirective, { static: true }) libMaGridCellTemplate: MaGridCellTemplateDirective;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) { \n    // console.log('DataGridTemplateCellComponent c',this.template);\n  }\n\n  ngOnInit(): void {\n    // \n    if (!this.template) {\n      return;\n    }\n    const component = new DataGridCellItemComponent(this.template,this.data);\n\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(component.component);\n    if (!this.libMaGridCellTemplate) {\n      return;\n    }\n    const viewContainerRef = this.libMaGridCellTemplate.viewContainerRef;\n    const componentRef = viewContainerRef.createComponent<DataGridCellItemComponent>(componentFactory);\n    componentRef.instance.data = component.data;\n  }\n}\n","import { AfterViewInit, Component, Input, OnInit } from '@angular/core';\nimport { MaDataGridCell } from '../../interfaces/ma-data-grid-cell';\nimport { MaDataGridColumnOptions } from '../../interfaces/ma-data-grid-options';\n\n@Component({\n  selector: 'ma-data-grid-cell-boolean',\n  template: '<div style=\"text-align: center\"><i class=\"tiny material-icons\">{{icon}}</i></div>'\n  \n})\nexport class DataGridCellBooleanComponent implements MaDataGridCell, OnInit {\n\n  @Input() data: any;\n  @Input() col: MaDataGridColumnOptions;\n\n  icon: string = '';\n\n  constructor() { }\n\n  ngOnInit(): void {\n    // console.log(this.data[this.col.prop]);\n    if (this.data[this.col.prop] === true) {\n      this.icon = 'check_box'\n    } else if (this.data[this.col.prop] === false) {\n      this.icon = 'check_box_outline_blank'\n    }\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'maDataGridPipe'\n})\nexport class DataGridPipePipe implements PipeTransform {\n\n  transform(value: any, row?: any, col?:any): unknown {\n    if (col.pipe) {\n      return col.pipe(value,row,col)\n    }\n    return value;\n  }\n\n}\n","<!-- #gridfilter *ngIf=\"extFilter\" -->\r\n<ma-data-grid-filter #gridfilter *ngIf=\"extFilter\" [customCSS]=\"customCSS\"  [(searchValue)]=\"searchValue\" [columns]=\"columns\"  (filterChange)=\"_filterChange($event)\"></ma-data-grid-filter>\r\n<div class=\"datagrid_page\">\r\n    <div class=\"scroller\">\r\n        <table class=\"{{customCSS}}grid_table\">\r\n            <!-- HEADER -->\r\n            <tr class=\"grid_row\">\r\n                <td class=\"{{customCSS}}grid_cell {{customCSS}}grid_cell_title\"  [ngClass]=\"{grid_cell_first: i==0}\" *ngFor=\"let col of columns;index as i; \">\r\n                    {{col.title}} \r\n                    <span *ngIf=\"col.isRowNumber !== true && col.sorted === true\" (click)=\"sortBy(col)\">\r\n                        <span *ngIf=\"sortedField.field != col.prop\" class=\"grid_sort tiny material-icons\">swap_vert</span>\r\n                        <span *ngIf=\"sortedField.field === col.prop && sortedField.reverse\" class=\"grid_sort tiny material-icons\">arrow_drop_down</span>\r\n                        <span *ngIf=\"sortedField.field === col.prop && !sortedField.reverse\" class=\"grid_sort tiny material-icons\">arrow_drop_up</span>\r\n                    </span> \r\n                </td>\r\n            </tr>\r\n            <!-- Head Filter -->\r\n            <tr class=\"{{customCSS}}grid_row\" *ngIf=\"headFilter\">\r\n                <td class=\"{{customCSS}}grid_cell {{customCSS}}grid_cell_title\"  [ngClass]=\"{grid_cell_first: i==0}\" *ngFor=\"let col of columns;index as i; \">\r\n                    <ma-data-grid-head-filter #headerfilter *ngIf=\"col.dataType || col.headFilter\" [col]=\"col\" (changeHeaderFilter)=\"_changeHeaderFilter($event)\"></ma-data-grid-head-filter>\r\n                </td>\r\n            </tr>\r\n            <!-- DATA -->\r\n            <tr class=\"{{customCSS}}grid_row\" *ngFor=\"let row of rows_displayed; \r\n                    last as isLastRow; \r\n                    even as pair; \r\n                    index as i; \r\n                    first as isFirstRow\"\r\n                (click)=\"SelectRow(i,row)\" [ngClass]=\"{'grid_row_selected': i == row_selected && !cell_selected, 'CSSclassEven': pair,'CSSclassOdd': !pair, 'grid_row_first': isFirstRow, 'grid_row_end': isLastRow}\">\r\n    \r\n                <td class=\"{{customCSS}}grid_cell {{col.cssClass}}\" *ngFor=\"let col of columns; \r\n                    index as ncol; \r\n                    count as maxcol; \r\n                    first as isFirstCol\r\n                    last as isLastCol;\" \r\n                    \r\n                    [ngClass]=\"{'grid_cell_selected': i == row_selected && col.prop == cell_selected, 'grid_cell_end': isLastCol,'grid_cell_first': isFirstCol}\"\r\n                    (click)=\"SelectCell(i,row,col)\">\r\n                    <!--  {{col.prop}} représente le nom de colonne d'un élément contenu dans 'colmuns' -- >\r\n                    <div *ngIf=\"col.isRowNumber === true; then RowNumberBlock else dataBlock\"></div>\r\n                    <ng-template #RowNumberBlock>{{i}}</ng-template>\r\n                    <ng-template #dataBlock> {{u[col.prop] | dataGridPipe :u :c}}</ng-template>\r\n                    -->\r\n                    <datagrid-cell-container [ngSwitch]=\"true\"  >\r\n                        <datagrid-cell-element *ngSwitchCase=\"col.isRowNumber === true\">{{i}}</datagrid-cell-element>\r\n                        <datagrid-cell-element *ngSwitchCase=\"col.isRowHTML === true\"><span [innerHTML]=\"row[col.prop]\"></span></datagrid-cell-element>\r\n                        <datagrid-cell-element *ngSwitchCase=\"col.useTemplate != null\"><ma-data-grid-template-cell-t1 [template]=\"col.useTemplate\" [data]=\"row\"></ma-data-grid-template-cell-t1></datagrid-cell-element>\r\n                        <datagrid-cell-element *ngSwitchCase=\"col.dataType == 'boolean'\"><ma-data-grid-cell-boolean [template]=\"col.useTemplate\" [col]=\"col\" [data]=\"row\"></ma-data-grid-cell-boolean></datagrid-cell-element>\r\n                        <datagrid-cell-element *ngSwitchDefault>{{row[col.prop] | maDataGridPipe :row :col}}</datagrid-cell-element>\r\n                    </datagrid-cell-container>\r\n                </td>\r\n        \r\n            </tr>\r\n        </table>\r\n        \r\n    </div>\r\n    <div class=\"row\" style=\"padding-top: 5px;\">\r\n        <div class=\"col s3 \">\r\n            <div class=\"page_number\">#{{nb_record}} record<span *ngIf=\"nb_record > 1\">s</span></div>\r\n        </div>\r\n        <div class=\"col s8 div_pagination\">\r\n           \r\n            <ul class=\"pagination\">\r\n                <li *ngIf=\"max_page >= 9\" (click)=\"FastDecrementPage()\" [ngClass]=\"{'disabled': current_page == 0,'': current_page != 0}\"><a  class=\"pointer\"><i class=\"material-icons small\">fast_rewind</i></a></li>\r\n                <li *ngIf=\"nb_record > 0\" (click)=\"DecrementPage()\" [ngClass]=\"{'disabled': current_page == 0,'': current_page != 0}\"><a  class=\"pointer\"><i class=\"material-icons small\">chevron_left</i></a></li>\r\n                <li *ngFor=\"let n_page of pages\" (click)=\"_changePage(n_page)\" [ngClass]=\"{'active': current_page == n_page,'': current_page != n_page}\" ><a class=\"pointer\" class=\"a_pagination small \">{{(n_page+1)}}</a></li>\r\n                <li *ngIf=\"nb_record > 0\" (click)=\"IncrementPage()\" [ngClass]=\"{'disabled': current_page == max_page,'': current_page != max_page}\"><a  class=\"pointer\"><i class=\"material-icons small\">chevron_right</i></a></li>\r\n                <li *ngIf=\"max_page >= 9\" (click)=\"FastIncrementPage()\" [ngClass]=\"{'disabled': current_page == max_page,'': current_page != max_page}\"><a class=\"pointer\"><i class=\"material-icons small\">fast_forward</i></a></li>\r\n            </ul>\r\n       \r\n        </div>\r\n    </div>\r\n</div>\r\n    \r\n    ","import { QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { DataGridHeadFilterComponent } from './components/data-grid-head-filter/data-grid-head-filter.component';\nimport { MaDataGridFilterEvent, MaDataGridColumnOptions, MaDataGridSelectMethod, MaDataGridSelectEvent, MaDataGridHeadFilterEvent } from './interfaces/ma-data-grid-options';\nimport { MaGridFilterComponent } from './ma-grid-filter.component';\nimport { FilterConditions, MaFilter } from \"@amn31/filter-multiple-conditions\"\n// import { PipeLengthPipe } from 'src/app/pipes/pipe-length.pipe';\n@Component({\n  selector: 'ma-data-grid',\n  //providers: [PipeLengthPipe],\n  templateUrl: './ma-data-grid.component.html',\n  styleUrls: ['./ma-data-grid.component.css'],\n\n})\nexport class MaDataGridComponent implements OnInit, OnChanges {\n\n  /*  \"columns\" element d'entrée\n     \"change\" element de sortir permettant de prendre en compte\n                   l'event OnChanges\n    <ma-data-grid [columns]=\"columns\"  [rows]=\"rows\" (change)=\"ChangeData($event)\"></ma-data-grid>\n */\n  @Input() columns: MaDataGridColumnOptions[] = [];\n  @Input() limit: number = 7;\n  @Input() canSelect: MaDataGridSelectMethod;\n  @Input() extFilter: boolean = false;\n  @Input() headFilter: boolean = false;\n  @Input() pagination: boolean = false;\n  @Input() page: number = -1;\n  @Input() count: number = 0;\n  @Input() customCSS:  string = \"\";\n\n  @Input() rows: any = [];\n  @Output() change = new EventEmitter<any>();\n  @Output() select = new EventEmitter<MaDataGridSelectEvent>();\n  @Output() extFilterChange = new EventEmitter<MaDataGridFilterEvent>();\n  @Output() filterChange = new EventEmitter<any>();\n  @Output() changePage = new EventEmitter<any>();\n  @Output() sort = new EventEmitter<any>();\n  @Output() canSelectChange = new EventEmitter<MaDataGridSelectMethod>();\n\n  @ViewChild(MaGridFilterComponent, { static: true }) gridfilter: MaGridFilterComponent;\n  @ViewChildren(DataGridHeadFilterComponent) headerfilter: QueryList<DataGridHeadFilterComponent>;\n\n  grid_cell_first = this.customCSS + 'grid_cell_first'\n  grid_row_selected = this.customCSS + 'grid_row_selected';\n  current_page: number = -1;\n  max_page: number = 1;\n  max_nb_page: number = 6;\n  nb_page: number = 1;\n  startat: number = 0;\n  searchValue: string = \"c\"\n  \n  rows_displayed: any = [];\n  pages = [];\n  conditions: FilterConditions = []\n  nb_record: number = 0;\n  row_selected: number = -1;\n  cell_selected: number = -1;\n\n  temp: any[];\n\n  sortedField = {\n    field: '',\n    reverse: true\n  };\n\n  constructor(/*private pipeLength: PipeLengthPipe*/) { \n    //console.log('YO')\n  }\n\n  resetSelection() {\n    this.cell_selected = -1;\n    this.row_selected = -1;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // console.log(\"this.searchValue: \" + this.searchValue)\n    // console.log('ngOnChanges ', changes);\n    if (changes.page && changes.page.currentValue >= 0) {\n    }\n    if (changes.canSelect && changes.canSelect.currentValue) {\n      //this.page = changes.page.currentValue;\n      // console.log('canSelect  ', changes.canSelect.currentValue);\n      this.canSelectChange.emit(changes.canSelect.previousValue)\n    }\n    if (changes.limit && changes.limit.currentValue) {\n      this.limit = changes.limit.currentValue;\n    }\n    if (changes.rows && changes.rows.currentValue) {\n      this.temp = changes.rows.currentValue;\n      this._changePage(this.current_page, this.temp, true);\n    }\n    // console.log(\"a - ngOnChanges current_page => \" + this.current_page)\n  }\n\n  IncrementPage() {\n    this._changePage(this.current_page + 1, this.temp)\n  }\n\n  DecrementPage() {\n    this._changePage(this.current_page - 1, this.temp)\n  }\n\n  FastIncrementPage() {\n    let p = this.current_page + 5; //Math.round(this.max_page / 50);\n    this._changePage(p, this.temp)\n  }\n\n  FastDecrementPage() {\n    let p = this.current_page - 5; //Math.round(this.max_page / 50);;\n    this._changePage(p, this.temp)\n  }\n\n  private _changePage(n_page: number, rows?: any, force?: boolean) {\n    if (!rows)\n      rows = this.temp;\n\n    //\n\n    if (this.pagination == false) {\n      if (force === true) {\n        this.temp = MaFilter.FilterByConditions(this.conditions, rows);\n        this.temp = this._sortData(this.temp);\n        rows = this.temp;\n      }\n      this.count = rows.length;\n    }\n    // Calcul du max_page\n    this.max_page = 0;\n    if (this.count >= 0 && this.limit > 0) {\n      this.max_page = Math.floor(this.count / this.limit);\n      if ((this.count % this.limit) != 0) {\n        this.max_page += 1;\n      }\n    }\n    if (n_page < 0) {\n      n_page = 0;\n    }\n    if (n_page >= this.max_page && this.max_page > 0) {\n      n_page = this.max_page - 1;\n    }\n    // console.log(\"changePage \" + n_page + ' / ' + this.max_page + ' c => ' + this.current_page + ' max_page ' + this.max_page);\n\n    if (this.page >= 0 || this.pagination) {\n      if (this.current_page != n_page) {\n        this.current_page = n_page;\n        this.searchValue = '';\n        // console.log(\"=============> EMIT CHANGE \")\n        this.changePage.emit(n_page);\n        return;\n      }\n\n      this.row_selected = -1;\n      this.current_page = n_page;\n      this.nb_record = this.count;\n      this.startat = 0;\n      this.rows_displayed = [];\n      for (let i = 0; rows && i < this.limit && i < this.count && i < rows.length; i++) {\n        this.rows_displayed.push(rows[i]);\n      }\n\n    } else {\n\n      // SANS PAGINATION\n      // console.error(\"SANS PAGINATION\")\n      \n      if (!force && (this.current_page == n_page)) {\n        return;\n      }\n      this.row_selected = -1;\n      this.current_page = n_page;\n      this.nb_record = 0;\n      this.startat = 0;\n      this.rows_displayed = [];\n\n      for (let i = 0; rows && i < this.limit && i < rows.length; i++) {\n        if (rows.length > (this.current_page * this.limit) + i) {\n          this.rows_displayed.push(rows[this.current_page * this.limit + i]);\n        }\n      }\n      this.nb_record = rows.length;\n\n\n    }\n    // Calcul du nombre de page en bas du datagrid\n    this.startat = this.limit * (this.current_page + 1);\n    if (this.startat > this.count)\n      this.startat = this.count;\n    this.pages = [];\n    let start_page = this.current_page - Math.round(this.max_nb_page / 2);\n    if (start_page < 0)\n      start_page = 0;\n    for (let p = start_page, nbp = 0; rows && p < this.count / this.limit && nbp < this.max_nb_page; nbp++, p++) {\n      this.pages.push(p)\n    }\n\n  }\n\n  ngOnInit(): void {\n    //this.pipeLength.transform(\"bbb\");\n\n  }\n\n  private _sortData(rows) {\n    let sf = this.sortedField.field;\n    //console.log('_sortData',this.sortedField)\n    return rows.sort((a, b) => {\n\n      let r;\n\n      if (typeof (a[sf]) === 'string' || typeof (b[sf]) === 'string') {\n        var c3: string = a[sf];\n        var c4 : string= b[sf];\n        if (c4 == null) {\n          c4 = '';\n        }\n        if (c3 == null) {\n          c3 = '';\n        }\n        r = c3.localeCompare(c4, 'en', { sensitivity: 'base' });\n\n      } else {\n        if (typeof (a[sf]) === 'number' || typeof (b[sf]) === 'number') {\n          r = a[sf] - b[sf]\n        } else {\n          if (typeof (a[sf]) === 'boolean' || typeof (b[sf]) === 'boolean') {\n            var c1 = 0;\n            if (a[sf] === true)\n              c1 = 2;\n            if (a[sf] === false)\n              c1 = 1;\n            var c2 = 0;\n            if (b[sf] === true)\n              c2 = 2;\n            if (b[sf] === false)\n              c2 = 1;\n            r = c1 - c2;\n          } else {\n            r = a[sf] < b[sf]\n          }\n\n        }\n\n      }\n      //console.log('Compare ' + a[sf] + ' <=> ' + b[sf] + '  = ' + r + ' this.sortedField.reverse' + this.sortedField.reverse)\n      if (this.sortedField.reverse) {\n        return r * -1\n      }\n      return r\n    });\n\n  }\n\n  sortBy(col) {\n    // console.log(col);\n    if (this.sortedField.field == col.prop) {\n      this.sortedField.reverse = !this.sortedField.reverse\n    } else {\n      this.sortedField.reverse = false;\n    }\n    this.sortedField.field = col.prop;\n    if (this.pagination) {\n      this.sort.emit(this.sortedField);\n      return;\n    } else {\n\n      this._changePage(this.current_page, this.rows, true);\n    }\n\n  }\n\n  SelectRow(index, row) {\n    if (this.canSelect === \"row\") {\n      this.row_selected = index;\n      this.cell_selected = null;\n      let trueIndex = this.current_page * this.limit + index;\n      //let data = this.rows[trueIndex];\n      // console.log(\"SelectRow trueIndex\", trueIndex);\n      this.select.emit(<MaDataGridSelectEvent>{ index: trueIndex, row: row });\n    }\n  }\n\n  SelectCell(index, row, col) {\n    // console.log(\"SelectCell Select\", index, row, col);\n    if (this.canSelect === \"cell\") {\n      this.row_selected = index;\n      this.cell_selected = col.prop;\n      // console.log(\"SelectCell Select\", index, row, col);\n      let trueIndex = this.current_page * this.limit + index;\n      //console.log(\"Data Grid trueIndex\", trueIndex);\n      this.select.emit(<MaDataGridSelectEvent>{ index: trueIndex, row: row, prop: col.prop, value: row[col.prop], });\n    }\n  }\n\n  private _filterChange(e: MaDataGridFilterEvent) {\n    this.extFilterChange.emit(e);\n  }\n\n  timeout = null;\n  private _changeHeaderFilter(e: any) {\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      this._delayChangeHeaderFilter(e);\n    }, 500);\n  }\n\n  private _delayChangeHeaderFilter(e: any) {\n    let conditions = [];\n    this.headerfilter.forEach((item) => {\n      //item.filter_value;\n      let condition = item.getFilter();\n      if (condition) {\n        if (conditions.length > 0) {\n          conditions.push('and');\n        }\n        conditions.push(condition);\n      }\n      //console.log(item.col.prop + ' => '+item.filter_value);\n    })\n    // console.log(\"CONDITIONS\", conditions);\n    if (this.pagination == false) {\n      this.conditions = conditions;\n      this._changePage(0, this.rows, true);\n      this.filterChange.emit(<MaDataGridHeadFilterEvent>{ where: conditions, data: this.temp });\n    } else {\n      this.filterChange.emit(<MaDataGridHeadFilterEvent>{ where: conditions });\n    }\n\n\n  }\n\n}\n","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[libMaAnchorGridCell]'\n})\nexport class MaAnchorGridCellDirective {\n\n  constructor(public viewContainerRef: ViewContainerRef) { }\n\n}\n","import { Component, NgModule } from '@angular/core';\nimport { MaDataGridComponent } from './ma-data-grid.component';\nimport { MaAnchorGridCellDirective } from './directives/ma-anchor-grid-cell.directive';\nimport { DataGridTemplateCellComponent } from './components/data-grid-template-cell/data-grid-template-cell.component';\nimport { DataGridPipePipe } from './pipes/data-grid-pipe.pipe';\nimport { CommonModule } from '@angular/common';\nimport { MaGridFilterComponent } from './ma-grid-filter.component';\nimport { DataGridHeadFilterComponent } from './components/data-grid-head-filter/data-grid-head-filter.component';\nimport { DataGridPickerDateComponent } from './components/data-grid-picker-date/data-grid-picker-date.component';\nimport { DataGridOpFilterComponent } from './components/data-grid-op-filter/data-grid-op-filter.component';\nimport { FormsModule } from '@angular/forms';\nimport { DataGridCellBooleanComponent } from './components/data-grid-cell-boolean/data-grid-cell-boolean.component';\nimport { MaGridCellTemplateDirective } from './directives/ma-grid-cell-template.directive';\n\n@NgModule({\n  declarations: [\n    MaDataGridComponent, \n    MaAnchorGridCellDirective, \n    DataGridTemplateCellComponent, \n    DataGridPipePipe,\n    MaGridFilterComponent,\n    DataGridHeadFilterComponent,\n    DataGridOpFilterComponent,\n    DataGridPickerDateComponent,\n    DataGridCellBooleanComponent,\n    MaGridCellTemplateDirective\n  ],\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  exports: [\n    /* Ajouter CommonModule pour éviter les erreurs \n        Can't bind to 'ngClass' since it isn't a known property */\n    MaDataGridComponent,\n    MaGridFilterComponent\n  ]\n})\nexport class MaDataGridModule { }\n"]}