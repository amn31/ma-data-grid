{"version":3,"sources":["../../../projects/ma-data-grid/src/lib/interfaces/ma-data-grid-options.ts","../../../projects/ma-data-grid/src/lib/components/data-grid-op-filter/data-grid-op-filter.component.ts","../../../projects/ma-data-grid/src/lib/components/data-grid-picker-date/data-grid-picker-date.component.ts","../../../projects/ma-data-grid/src/lib/components/data-grid-head-filter/data-grid-head-filter.component.ts","../../../node_modules/tslib/tslib.es6.js","../../../projects/ma-data-grid/src/lib/ma-grid-filter.component.ts","../../../projects/ma-data-grid/src/lib/ma-data-grid.component.ts","../../../projects/ma-data-grid/src/lib/directives/ma-anchor-grid-cell.directive.ts","../../../projects/ma-data-grid/src/lib/directives/ma-grid-cell-template.directive.ts","../../../projects/ma-data-grid/src/lib/components/data-grid-cell-item/data-grid-cell-item.component.ts","../../../projects/ma-data-grid/src/lib/components/data-grid-template-cell/data-grid-template-cell.component.ts","../../../projects/ma-data-grid/src/lib/pipes/data-grid-pipe.pipe.ts","../../../projects/ma-data-grid/src/lib/components/data-grid-cell-boolean/data-grid-cell-boolean.component.ts","../../../projects/ma-data-grid/src/lib/components/data-grid-celledit-item/data-grid-celledit-item.component.ts","../../../projects/ma-data-grid/src/lib/components/data-grid-cell-selector/data-grid-cell-selector.component.ts","../../../projects/ma-data-grid/src/lib/ma-data-grid.module.ts"],"names":["options_header_boolean","value","operator","label","options_header_bool","options_header_string","options_header_number","options_header_date","DataGridOpFilterComponent","this","changeOperator","EventEmitter","changeEmptyOperator","options","multiple","isHTML","values","popupPosition","top","left","prototype","getFuncClickDocument","p","fct","elemToggle","nativeElement","style","display","$","document","off","toggleDiv","onClickDocument","elemValue","parentElement","setTimeout","on","cloneOptions","opts","i","length","push","Object","assign","ngOnInit","_this","col","dataType","headFilter","prop","selectedFilter","selected","find","d","changeValue","checked","setFirstChoice","getOperator","changeValues","opt","splice","_changeOperator","getConditions","filter_value","o","toString","replace","conditions","v","ignoreToggle","match","emit","console","log","Component","args","selector","template","Input","ViewChild","static","Output","DataGridPickerDateComponent","datevalue","realValue","time","changePicker","datepicker_id","Math","floor","random","ngAfterViewInit","_init","ngOnDestroy","instance","destroy","getDate","setDate","date","offset","Date","getTimezoneOffset","getTime","elem","getElementById","toISOString","setTime","hour","min","ptr","type","M.Datepicker","init","autoClose","format","onSelect","onchange","e","emitDateEvent","M.Timepicker","twelveHour","h","m","emitTimeEvent","onChange","DataGridHeadFilterComponent","changeHeaderFilter","astuce_datapicker","getFilter","filter","op_filter","_changeEmptyOperator","madate_picker","event","fromInputKey","_changeDate","create","__values","s","Symbol","iterator","call","next","done","TypeError","MaGridFilterComponent","placeholder","customCSS","searchValueChange","columns","filterChange","input_filter","filters","selectedFields","ngOnChanges","changes","searchValue","val","currentValue","_b","_c","extFilter","extFilterSelected","enableFocus","M.updateTextFields","clickChekbox","updateFilter","focus","blur","text","fields","MaDataGridComponent","limit","pagination","page","count","myGrid","rows","change","select","extFilterChange","changePage","sort","canSelectChange","rowsChange","rowsSelect","grid_cell_first","grid_row_selected","current_page","max_page","max_nb_page","nb_page","startat","rows_displayed","pages","nb_record","row_selected","cell_selected","sortedField","field","reverse","timeout","resetSelection","canSelect","previousValue","temp","_changePage","IncrementPage","DecrementPage","FastIncrementPage","_dataChange","evt","_dataSelector","undefined","FastDecrementPage","n_page","force","MaFilter","FilterByConditions","_sortData","start_page","round","nbp","sf","a","b","r","c3","c4","localeCompare","sensitivity","c1","c2","sortBy","SelectRow","index","row","trueIndex","SelectCell","_filterChange","_changeHeaderFilter","clearTimeout","_delayChangeHeaderFilter","headerfilter","forEach","item","condition","where","data","ViewChildren","viewContainerRef","Directive","ViewContainerRef","DataGridCellItemComponent","component","DataGridTemplateCellComponent","componentFactoryResolver","componentFactory","resolveComponentFactory","libMaGridCellTemplate","componentRef","createComponent","dataChange","_a","subscribe","ComponentFactoryResolver","MaGridCellTemplateDirective","DataGridPipePipe","transform","pipe","Pipe","name","DataGridCellBooleanComponent","icon","DataGridCelleditItemComponent","onPress","Key","emitEvent","myInput","parseInt","parseFloat","onChangeCheckbox","myInputCheckbox","DataGridCellSelectorComponent","title","isHeader","myInputSelectorBox","NgModule","declarations","MaAnchorGridCellDirective","imports","CommonModule","FormsModule","exports"],"mappings":"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","sourcesContent":["//import { Type } from '@angular/core';\n\nimport { FilterConditions } from \"@amn31/filter-multiple-conditions\";\nimport { Type } from \"@angular/core\";\nimport { MaDataGridCell } from \"./ma-data-grid-cell\";\n\n\nexport type MaDataGridSelectMethod = 'row' | 'cell'\nexport interface MaDataGridSelectEvent {\n  index: number;\n  row: any;\n  value?: any;\n  prop?: string;\n}\n\nexport interface MaDataGridHeadFilterEvent {\n  where: FilterConditions,\n  data?: [];\n}\n\n/**\n * Sorted field\n */\nexport interface MaDataGridSortedField {\n  /**\n   * field name\n   */\n  field: string; \n  /**\n   * Invert or not the sorted result\n   */\n  reverse?: boolean\n}\n\nexport interface MaDataGridSelectedFilter {\n  /**\n   * Operator can be '=','>',...\n   */\n  operator: string;\n  /**\n   * value to compare\n   */\n  value: string|number;\n}\n\nexport interface MaDataGridColumnOptions {\n  /**\n   * Display or not the head filter regarding this column\n   */\n  filter?: boolean;\n  /**\n   * Title of column\n   */\n  title?: string;\n  /**\n   * Defaut selected operator \n   * Example: { \n        operator: '=', value: 34 \n      },\n   */\n  selectedFilter?: MaDataGridSelectedFilter;\n  /**\n   * To custom the css of the cell \n   * To change all CSS : <ma-data-grid customCSS=\"mycss\"../> \n   */\n  cssClass?: string;\n  /**\n   * The data printed use HTML\n   */\n  isHTML?: boolean;\n  /**\n   * Allow to change the contains of the column\n   * \n   * when a value is changed, 'rowsChange' event is sent \n   * <ma-data-grid (rowsChange)=\"rowsChange($event)\"../>\n   */\n  canEdit?: boolean;\n  // canDelete?: boolean;\n  /**\n   * The identifier field of the column. \n   * Ihis property is used to sort the content of the grid\n   */\n  prop: string;\n  /**\n   * The column can be sorted or not by the property 'prop'\n   */\n  sorted?: boolean;\n  /**\n   * Define is the column can be filter with the external filter.\n   * Some configuration are required, example:\n   * <ma-data-grid [extFilter]=\"true\" (extFilterChange)=\"extUpdateFilter($event)\"../>\n   */\n  extFilter?: boolean;\n  /**\n   * Type of data of the column\n   * \n   * Type 'selector' can be used on identifier property to select rows(), example:\n   *  { prop: 'selected', title: 'Selected', dataType: 'selector' }\n   * \n   * To catch the event when a row is selected you have to use 'rowsSelect'\n   * <ma-data-grid (rowsSelect)=\"SelectRowOrCell($event)\" .../>\n   */\n  dataType?: 'boolean' | 'bool' | 'number' | 'date' | 'string' | 'datetime' | 'time' | 'float' | 'selector';\n  /**\n   * Filter of the column, according to the 'dataType', the column will be filtered.\n   * Here you can changed the type or pre-select the filter:\n   * Example: [{\n                  value: '1',\n                  operator: '=',\n                  checked: true,\n                  label: 'true'\n                }, {\n                  value: '0',\n                  operator: '=',\n                  label: 'false'\n                }\n              ]\n   */\n  headFilter?: MaDataGridHeadFilter[];\n  /**\n   * When the column is filtered by the external filter and 'extFilter' is setted to true \n   * According to 'extFilterSelected', the column in the external filter will be pre-selected or not\n   */\n  extFilterSelected?: boolean;\n  /**\n   * To change the content displayed, use this callback to return displayed value.\n   */\n  pipe?(value: any, row: any, col: any): string  //=> {return: string|number};\n  /**\n   * To custom the content of the cell, we can use a specific component which have to implement MaDataGridCell class\n   * \n   * export class xxxxxxxxxxComponent implements MaDataGridCell   {\n        \n        @Input() data: [];\n        @Input() prop: string;\n        @Input() col: MaDataGridColumnOptions;\n\n        constructor(private theGrid:MaDataGridComponent) {}\n\n    } \n   * \n   */\n  useTemplate?: Type<MaDataGridCell>\n}\n\n/**\n * Head Filter\n */\nexport interface MaDataGridHeadFilter {\n  /**\n   * Value to search in the head of filter\n   * To compose the filter you can use '${1}' which is the input value,\n   * So for example, you can be create specific SQL filter like that:\n   *        {\n              value: '%${1}%',\n              operator: 'not like',\n              label: 'without',\n            }\n   */\n  value: string;\n  /**\n   * Operator of research Example : '=','like',...\n   */\n  operator: string;\n  /**\n   * Value displayed for selecting\n   */\n  label?: string;\n  /**\n   * For pre-selected \n   */\n  checked?: boolean;\n}\n\n\nexport const options_header_boolean: MaDataGridHeadFilter[] = [{\n  value: '1',\n  operator: '=',\n  label: 'true'\n}, {\n  value: '0',\n  operator: '=',\n  label: 'false'\n}, {\n  value: 'a',\n  operator: 'isnull',\n  label: 'NULL'\n}, {\n  value: 'a',\n  operator: 'isnotnull',\n  label: '!NULL'\n},];\n\nexport const options_header_bool: MaDataGridHeadFilter[] = [{\n  value: '1',\n  operator: '=',\n  label: 'true'\n}, {\n  value: '0',\n  operator: '=',\n  label: 'false'\n}];\n\nexport const options_header_string: MaDataGridHeadFilter[] = [\n  {\n    value: '',\n    operator: '',\n    label: ''\n  }, {\n    value: '%${1}%',\n    operator: 'like',\n    label: 'contains',\n  }, {\n    value: '%${1}%',\n    operator: 'not like',\n    label: 'without',\n  }, {\n    value: '${1}%',\n    operator: 'like',\n    label: 'startswith'\n  }, {\n    value: '${1}%',\n    operator: 'not like',\n    label: 'not start'\n  }, {\n    value: '%${1}',\n    operator: 'like',\n    label: 'endswith',\n  }, {\n    value: '%${1}',\n    operator: 'not like',\n    label: 'not end',\n  }];\n\nexport const options_header_number: MaDataGridHeadFilter[] = [{\n  value: '',\n  operator: '',\n  label: ''\n}, {\n  value: '${1}',\n  operator: '=',\n  label: '=='\n}, {\n  value: '${1}',\n  operator: '!=',\n  label: '!='\n}, {\n  value: '${1}',\n  operator: '>',\n  label: '>'\n}, {\n  value: '${1}',\n  operator: '>=',\n  label: '>='\n}, {\n  value: '${1}',\n  operator: '<=',\n  label: '<=',\n}, {\n  value: '${1}',\n  operator: '<',\n  label: '<',\n}];\n\nexport const options_header_date: MaDataGridHeadFilter[] = [{\n  value: '',\n  operator: '',\n  label: ''\n}, {\n  value: '${1}',\n  operator: '=',\n  label: '=='\n}, {\n  value: '${1}',\n  operator: '!=',\n  label: '!='\n}, {\n  value: '${1}',\n  operator: '>',\n  label: '>'\n}, {\n  value: '${1}',\n  operator: '>=',\n  label: '>='\n}, {\n  value: '${1}',\n  operator: '<=',\n  label: '<=',\n}, {\n  value: '${1}',\n  operator: '<',\n  label: '<',\n}];\n\nexport interface MaDataGridFilterEvent {\n  text: string;\n  fields: string[]\n}\n\n// export class MaData {\n  \n//   static FilterByConditions(where, temp: any) {\n//     // console.log('DEAL findFull ==== ', where);\n\n//     if (!where || where.length == 0) {\n//       return temp;\n//     }\n\n//     var result = [];\n//     for (var i = 0; i < where.length; i++) {\n//       var condition = where[i];\n//       let temp1;\n//       // console.log('DEAL typeof(condition)' + typeof (condition), condition);\n//       if (typeof (condition) == 'object') {\n//         if (condition.length == 3 &&\n//           typeof (condition[0]) == 'string' && typeof (condition[1]) == 'string' &&\n//           (typeof (condition[2]) == 'string' || typeof (condition[2]) == 'number')) {\n//           // console.log(\"DEAL TO FIND \", temp.length)\n//           temp1 = this._filterResultBySimpleCondition(condition, temp);\n//         } else if (condition.length > 0 && condition.find(d => typeof (d) == 'object')) {\n//           temp1 = this.FilterByConditions(condition, temp);\n//         }\n//       } else {\n//         if (typeof (condition) == 'string') {\n//           if (condition != 'or' && condition != 'and') {\n//             throw (\"Unexpected condition :\" + condition)\n//           }\n//         }\n//       }\n//       if (temp1) {\n//         // console.log('DEAL TODO', temp1.length);\n//         // Cas où l'operator précédent était 'or'\n//         if (where[i + 1] && where[i + 1] == 'or' || (i == where.length - 1 && where[i - 1] && where[i - 1] == 'or')) {\n//           // On ajoute au result les valeurs non trouvées précédemment\n//           for (var t of temp1) {\n//             //console.log(t);\n//             if (!(result.find(d => d === t))) {\n//               result.push(t);\n//             }\n//           }\n//           // console.log(\"DEAL TODO OR\", result)\n\n//           // Cas où l'operator précédent était 'and'\n//         } else {\n//           // console.log(\"DEAL TODO AND\", temp1);\n//           // On ecrase temp\n//           temp = temp1;\n//           result = temp;\n//         }\n//       }\n\n//       i++;\n//     }\n//     return result;\n//   }\n \n\n//   private static _filterResultBySimpleCondition(condition, temp: any) {\n//     console.log('DEAL findTemp === ', condition)\n//     if (typeof (condition) == 'object') {\n//       var field = condition[0];\n//       var operator = condition[1];\n//       var value = condition[2];\n//       let reg : any = null;\n//       let opnum = false;\n//       let reverse = false;\n//       console.log('field (1):' + field, operator, value)\n//       if (operator == 'startswith') {\n//         reg = new RegExp(\"^\" + value, 'i');\n//       } else if (operator == 'endswith') {\n//         reg = new RegExp(value + \"$\", 'i');\n//       } else if (operator == 'contains') {\n//         reg = new RegExp(value, 'i');\n//       } else if (operator == 'like' || operator == 'not like') {\n//         if (operator == 'not like') {\n//           reverse = true;\n//         }\n//         if (value.match(/^%.+%$/)) {\n//           value = value.replace(/^%/, '').replace(/%$/, '')\n//           operator = 'contains'\n//           reg = new RegExp(value, 'i');\n//         } else if (value.match(/.+%$/)) {\n//           value = value.replace(/%$/, '')\n//           operator = 'startswith'\n//           reg = new RegExp(\"^\" + value, 'i');\n//         } else if (value.match(/^%/)) {\n//           value = value.replace(/^%/, '')\n//           operator = 'endswith'\n//           reg = new RegExp(value + \"$\", 'i');\n//         }\n//       } else if (operator == 'regex') {\n//         reg = new RegExp(value, 'i');\n//       } else if (operator == 'notRegex') {\n//         reg = new RegExp(value, 'i');\n//         reverse = true;\n//       } else if (operator == 'isnull') {\n//       } else if (operator == 'isnotnull') {\n//       } else if (operator == '=') {\n//         opnum = true;\n//       } else if (operator == '>=') {\n//         opnum = true;\n//       } else if (operator == '>') {\n//         opnum = true;\n//       } else if (operator == '<') {\n//         opnum = true;\n//       } else if (operator == '!=') {\n//         opnum = true;\n//       } else if (operator == '<=') {\n//         opnum = true;\n//       } else {\n//         throw (\"Unkown operator \" + operator)\n//       }\n\n//       console.log('field:' + field, operator, value, reg)\n//       temp = temp.filter(function (d, index, array) {\n//         //console.log(d[field])\n//         if (reg == null) {\n//           if (opnum && typeof (d[field]) == 'number') {\n//             value = parseFloat(value)\n//           }\n//           if (operator == '=') {\n//             if (typeof (d[field]) == 'boolean') {\n//               if (value == '1')\n//                 value = true;\n//               if (value == '0')\n//                 value = false;\n//             }\n//             if (d[field] !== null) {\n//               if (d[field] === value) {\n//                 return true;\n//               }\n//             }\n//           } else if (operator == 'isnull') {\n//             if (d[field] == null) {\n//               return true;\n//             }\n//           } else if (operator == 'isnotnull') {\n//             if (d[field] != null) {\n//               return true;\n//             }\n//           } else if (operator == '>=') {\n//             if (d[field] !== null && d[field] >= value) {\n//               return true;\n//             }\n//           } else if (operator == '>') {\n//             if (d[field] !== null && d[field] > value) {\n//               return true;\n//             }\n//           } else if (operator == '!=') {\n//             if (d[field] !== null && d[field] != value) {\n//               return true;\n//             }\n//           } else if (operator == '<=') {\n//             if (d[field] !== null && d[field] <= value) {\n//               return true;\n//             }\n//           } else if (operator == '<') {\n//             if (d[field] !== null && d[field] < value) {\n//               return true;\n//             }\n//           }\n//         } else {\n//           if (d[field] && d[field].match(reg)) {\n//             if (reverse) {\n//               return false;\n//             }\n//             return true;\n//           }\n\n//         }\n//         if (reverse) {\n//           return true;\n//         }\n//         return false;\n//       })\n//     }\n//     return temp;\n//   }\n\n// }","import { Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { MaDataGridColumnOptions, MaDataGridHeadFilter, options_header_bool, options_header_boolean, options_header_date, options_header_number, options_header_string } from '../../interfaces/ma-data-grid-options';\nimport * as M from 'materialize-css';\nimport * as $ from 'jquery';\n\nconst defaut_label = ''\n@Component({\n  selector: 'ma-data-grid-op-filter',\n  templateUrl: './data-grid-op-filter.component.html',\n  styleUrls: ['./data-grid-op-filter.component.css']\n})\nexport class DataGridOpFilterComponent implements OnInit {\n\n  @Input() value = '';\n  @Input() col: MaDataGridColumnOptions;\n  @ViewChild(\"elemToggle\", { static: false }) elemToggle: ElementRef;\n  @ViewChild(\"elemValue\", { static: false }) elemValue: ElementRef;\n  @Output() changeOperator = new EventEmitter<any>();\n  @Output() changeEmptyOperator = new EventEmitter<any>();\n\n  options: MaDataGridHeadFilter[] = null;\n  multiple = false;\n  isHTML: boolean = false;\n  values: MaDataGridHeadFilter[] = [];\n  label = defaut_label;\n  popupPosition: any = {\n    top: 0,\n    left: 0\n  }\n\n  constructor() { }\n\n  getFuncClickDocument() {\n    let p = this;\n    let fct = function () {\n      // console.log('CLICK',fct);\n      p.elemToggle.nativeElement.style.display = 'none';\n      $(document).off('click', fct)\n    }\n    return fct\n  }\n\n  toggleDiv() {\n\n    var onClickDocument = this.getFuncClickDocument()\n    $(document).off('click', onClickDocument);\n\n    if (this.elemToggle.nativeElement.style.display == 'none') {\n\n      //this.elemToggle.nativeElement.style.position = 'absolute';\n      this.elemToggle.nativeElement.style.display = 'block';\n      let anchor = this.elemValue.nativeElement.parentElement;\n      //this.elemToggle.nativeElement.style.top = ($(anchor).height()+$(anchor).offset().top)+'px';\n      //this.elemToggle.nativeElement.style.left = $(anchor).offset().left+'px';\n      setTimeout(function () {\n        $(document).on('click', onClickDocument)\n      }, 500)\n\n    } else {\n      this.elemToggle.nativeElement.style.display = 'none';\n      $(document).off('click', onClickDocument)\n    }\n\n  }\n\n  cloneOptions(opts): MaDataGridHeadFilter[] {\n\n    if (opts == null) {\n      return null;\n    }\n    let options: MaDataGridHeadFilter[] = [];\n    for (let i = 0; i < opts.length; i++) {\n      options.push(Object.assign({}, opts[i]));\n    }\n    return options;\n  }\n\n  ngOnInit(): void {\n\n    this.isHTML = this.col.isHTML;\n    if (this.col.dataType == 'string') {\n      this.options = this.cloneOptions(options_header_string);\n    }\n    if (this.col.dataType == 'boolean') {\n      this.multiple = true;\n      this.options = this.cloneOptions(options_header_boolean);\n    }\n    if (this.col.dataType == 'bool') {\n      this.multiple = true;\n      this.options = this.cloneOptions(options_header_bool);\n    }\n    if (this.col.dataType == 'number' || this.col.dataType == 'float') {\n      this.options = this.cloneOptions(options_header_number)\n    }\n    if (this.col.dataType == 'date') {\n      this.options = this.cloneOptions(options_header_date);\n    }\n    if (this.col.dataType == 'selector') {\n      this.options = [];\n    }\n    if (this.col.headFilter) {\n      this.options = this.col.headFilter;\n      this.multiple = true;\n    }\n    if (this.options == null)\n      throw ('Bad definition to operator ' + this.col.prop);\n\n    // Pré-selection de l'operator\n    if (!this.multiple && this.col.selectedFilter) {\n      let selected = this.options.find((d) => d.operator === this.col.selectedFilter.operator);\n      if (selected) {\n        // console.log(\"SELECTED\", this.col.prop, selected);\n        this.changeValue(selected,true);\n      }\n    }\n    for (var i in this.options) {\n      if (this.options[i].checked !== true)\n        this.options[i].checked = false;\n    }\n    \n  }\n\n  setFirstChoice() {\n    // console.log(\"setFirstChoice (1) \"+this.value+' '+this.label);\n    // console.log(\"setFirstChoice \",this.value,this.label,this.options)\n    if (this.multiple === false && this.label == '') {\n      for (var i in this.options) {\n        if (this.options[i].label != '') {\n          this.changeValue(this.options[i], true);\n          return;\n        }\n      }\n    }\n\n  }\n\n  getOperator() {\n    if (this.multiple === false) {\n      // console.log('getOperator ' + this.col.prop + ' value ' + this.value, this.options)\n      if (this.value == '') {\n        return null;\n      }\n      return this.options.find((d) => d.value === this.value && d.checked == true);\n    }\n    return null;\n  }\n\n  changeValues(opt) {\n    /* Changement de l'operateur dans la cas de valeurs multiples d'operateurs \n        Ex: { value: \"Apple\", operator: \"=\", label: \"Apple\", checked: false } */\n    //console.log(\"CHANGES VALUES\", this.col.prop, opt)\n    if (opt.checked) {\n      // console.log(\"checked\");\n      opt.checked = false;\n      //this.values.splice(this.values.find((a) => a.value === opt.value && a.operator === opt.operator),1);\n    } else {\n      opt.checked = true;\n      //this.values.push(opt);\n    }\n    this.values.splice(0);\n    for (var i in this.options) {\n      if (this.options[i].checked === true) {\n        this.values.push(this.options[i]);\n      }\n    }\n    this.label = '(' + this.values.length + ')';\n    if (this.values.length == 0)\n      this.label = defaut_label;\n    //this.toggleDiv();\n    // console.log('changeValue OP', this.values);\n    this._changeOperator();\n  }\n\n  getConditions(filter_value) {\n    if (this.multiple == false) {\n      let o = this.getOperator();\n      // console.log('getFilter ' + this.col.prop + \" o\", o)\n      if (o != null && o.operator != '') {\n        let value = o.value.toString().replace('${1}', filter_value)\n        //if (this.col.dataType == 'number') {\n        //  value = parseFloat(value);\n        //}\n        return [this.col.prop, o.operator, value]\n      }\n    } else {\n      if (this.values.length > 0) {\n        let conditions = [];\n        for (var i = 0; i < this.values.length; i++) {\n          let v = this.values[i].value;\n          //if (this.col.dataType == 'number') {\n          //  v = parseFloat(v);\n          //}\n          conditions.push([this.col.prop, this.values[i].operator, v]);\n          if (this.values.length - 1 > i) {\n            conditions.push('or')\n          }\n        }\n        return conditions;\n      }\n    }\n    return null;\n  }\n\n  changeValue(opt: MaDataGridHeadFilter, ignoreToggle?: boolean) {\n    /* Changement de l'operateur dans la cas de valeurs simple (un seul choix)\n        Ex: { value: \"%${1}%\", operator: \"like\", label: \"contains\", checked: false } */\n    // \n\n    // console.log(\"CHANGE VALUE\", opt.operator, this.col.prop, opt)\n    if (this.options.find((d) => d.checked === true)) {\n      this.options.find((d) => d.checked === true).checked = false;\n    }\n    opt.checked = !opt.checked;\n    if (opt.label.match(/^\\s+$/)) {\n      this.value = '';\n      this.label = '';\n    } else {\n      this.value = opt.value;\n      this.label = opt.label;\n    }\n\n    // console.log('changeValue OP', this.options);\n    if (!ignoreToggle) {\n      this.toggleDiv();\n    }\n    this._changeOperator();\n    if (opt.operator == '') {\n      this.changeEmptyOperator.emit();\n    }\n  }\n\n  _changeOperator() {\n    // \n    console.log('EMIT OP', this.col.prop, this.options.find((d) => d.checked === true), this.options)\n    this.changeOperator.emit({\n      prop: this.col,\n      //  condition: [ this.col.prop, this.value ]\n    });\n  }\n}\n","import { AfterViewInit, Component, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport * as M from 'materialize-css';\n\n@Component({\n  selector: 'ma-data-grid-datepicker',\n  templateUrl: './data-grid-picker-date.component.html',\n  styleUrls: ['./data-grid-picker-date.component.css']\n})\nexport class DataGridPickerDateComponent implements OnInit, OnDestroy, AfterViewInit {\n\n  instance: any;\n  datevalue: Date = null;\n  realValue: string = \"\";\n  time: string = '';\n  @Input() value : string = '';\n  @Input() type: 'date' | 'time';\n  @Output() changePicker = new EventEmitter<any>();\n\n  datepicker_id: string = \"dp_\" + Math.floor((Math.random() * 100000));\n  @ViewChild(\"madatepicker\", { static: false }) madatepicker: ElementRef;\n\n  constructor() { }\n  ngAfterViewInit(): void {\n    this._init();\n  }\n  ngOnDestroy(): void {\n    if (this.instance)\n      this.instance.destroy();\n  }\n\n  ngOnInit(): void {\n    // console.log('ngOnInit this.madatepicker');\n    if (this.value == '') {\n      this.datevalue = null\n    }\n  }\n\n  getDate() {\n    return this.datevalue;\n  }\n\n  setDate(date) {\n    \n    if (date != null) {\n      const offset = new Date().getTimezoneOffset()\n      date = new Date(date.getTime() - (offset*60*1000))\n    }\n    var elem = <HTMLInputElement> document.getElementById(this.datepicker_id);\n    if (date == null) {\n      elem.value = '';\n    } else {\n      elem.value = date.toISOString().replace(/T.+/,'')\n    }\n    this.datevalue = date;\n    // console.log(\"setDate VALUE\", this.datevalue);\n  }\n\n  getTime() {\n    return this.time\n  }\n\n  setTime(hour, min) {\n    if (hour < 10) {\n      hour = '0' + hour\n    }\n    if (min < 10) {\n      min = '0' + min\n    }\n    this.time = hour + ':' + min;\n    // console.log(\"VALUE\", this.time);\n  }\n\n  _init(): void {\n    //var elems = document.querySelectorAll('.ma-data-grid-datepicker');\n    var elem = <HTMLInputElement> document.getElementById(this.datepicker_id);\n    var ptr = this;\n    \n    if (this.type == 'date') {\n      var instances = M.Datepicker.init(elem, {\n        autoClose: true,\n        format: 'yyyy-mm-dd',\n        onSelect: function (d) {\n          ptr.setDate(d);\n        }\n        //minDate: new Date(),\n        //maxDate: new Date(),\n      });\n      elem.onchange = function (e) {\n        // console.log(\"EVENT\", elem.value);\n        if (elem.value == '' || !elem.value.match(/^\\d\\d\\d\\d-\\d\\d-\\d\\d$/)) {\n          elem.value = ''\n          ptr.setDate(null);\n        }\n        ptr.emitDateEvent();\n\n      };\n      \n    } else {\n      var instances = M.Timepicker.init(elem, {\n        autoClose: true,\n        //format: 'yyyy-mm-dd',\n        twelveHour: false,\n        onSelect: function (d, h, m) {\n          //console.log(\"G\",d,h,m)\n          ptr.setTime(d, h);\n          ptr.emitTimeEvent();\n        }\n      });\n    }\n\n    //this.instance= instances[0];\n    //this.instance.setDate(new Date());\n    //instance.gotoDate(new Date());\n  }\n\n  onChange() {\n    // console.log(\"realValue\" + this.realValue);\n    if (this.type == 'date') {\n      this.changePicker.emit(this.datevalue);\n    } else {\n      this.changePicker.emit(this.time);\n    }\n  }\n\n  emitDateEvent() {\n    this.changePicker.emit(this.datevalue);\n  }\n\n  emitTimeEvent() {\n    this.changePicker.emit(this.time);\n  }\n\n}\n","import { ElementRef, EventEmitter, Input, Output, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { MaDataGridColumnOptions } from '../../interfaces/ma-data-grid-options';\nimport { DataGridOpFilterComponent } from '../data-grid-op-filter/data-grid-op-filter.component';\nimport { DataGridPickerDateComponent } from '../data-grid-picker-date/data-grid-picker-date.component';\n\n@Component({\n  selector: 'ma-data-grid-head-filter',\n  templateUrl: './data-grid-head-filter.component.html',\n  styleUrls: ['./data-grid-head-filter.component.css']\n})\nexport class DataGridHeadFilterComponent implements OnInit {\n\n  @Input() filter_value : string = '';\n  @Input() col: MaDataGridColumnOptions;\n  @Output() changeHeaderFilter = new EventEmitter<any>();\n  @ViewChild(DataGridOpFilterComponent) op_filter: DataGridOpFilterComponent;\n  @ViewChild(DataGridPickerDateComponent) madate_picker: DataGridPickerDateComponent;\n  // Récupération de tous les filtres\n  // @ViewChildren('op_filter') op_filters:QueryList<DataGridOpFilterComponent>;\n  astuce_datapicker: string = 'display: none';\n\n  constructor() { }\n\n  ngOnInit(): void {\n    if (this.col.dataType == 'date') {\n      this.astuce_datapicker = 'display: block';\n    }\n    if (this.col.selectedFilter && this.col.selectedFilter.value) {\n      this.filter_value = this.col.selectedFilter.value.toString()\n    }\n  }\n  \n  ngAfterViewInit(){\n    // Récupération de tous les filtres\n    //console.log('op_filters',this.op_filters.toArray());\n  }\n\n  getFilter () {\n    // console.log('getFilter',this.col)\n    if (this.col.filter == false) {\n      return null;\n    }\n    if (this.filter_value != '' || \n        this.col.dataType == 'boolean' || \n        this.col.dataType == 'bool' || this.col.headFilter != null) {\n     \n      \n      let o = this.op_filter.getConditions(this.filter_value);\n      // console.log('getConditions '+this.col.prop+ \" o\",o)\n      return o;\n      \n    }\n    return null;\n  }\n\n  _changeEmptyOperator() {\n    // console.log(\"_changeEmptyOperator\");\n    this.madate_picker.setDate(null);\n  }\n\n  _changeOperator(event,fromInputKey) {\n    // Récupération de tous les filtres\n    // for (let c of this.op_filters.toArray()) {\n    // }\n    if (this.col.filter == false) {\n      return;\n    }\n    //console.log('RECEIVE CHANGE OP',this.col, 'OP',this.filter_value)\n    //console.log('EMIT changeHeaderFilter', fromInputKey);\n    if (fromInputKey)\n      this.op_filter.setFirstChoice();\n    this.changeHeaderFilter.emit({\n      prop:this.col,\n      value: this.filter_value,\n      //condition: [ this.col.prop, this.op_filter.value, this.filter_value ]\n    });\n  }\n\n  _changeDate(date) {\n    \n    if (this.col.filter == false) {\n      return;\n    }\n    this.filter_value = '';\n    try {\n      this.filter_value= date.toISOString();\n      \n    } catch (e) {\n\n    }\n \n    // console.log(\"_changeDate\",this.filter_value);\n    this.changeHeaderFilter.emit({\n      prop:this.col,\n      value: this.filter_value,\n      //condition: [ this.col.prop, this.op_filter.value, this.filter_value ]\n    });\n  }\n\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output, SimpleChanges } from '@angular/core';\nimport *  as $ from 'jquery';\nimport *  as M from 'materialize-css';\nimport { MaDataGridFilterEvent, MaDataGridColumnOptions } from './interfaces/ma-data-grid-options';\n\n@Component({\n  selector: 'ma-data-grid-filter',\n  templateUrl: './ma-grid-filter.component.html',\n  styleUrls: ['./ma-grid-filter.component.css']\n})\nexport class MaGridFilterComponent implements OnInit {\n  \n\n  constructor() { }\n\n  \n  placeholder = 'Enter filter'\n  @Input() searchValue: string;\n  @Input() customCSS:  string = \"\";\n  @Output() searchValueChange = new EventEmitter();\n  @Input() columns: MaDataGridColumnOptions[] = [];\n  @Output() filterChange = new EventEmitter<MaDataGridFilterEvent>();\n  input_filter: string = \"if_\"+Math.floor((Math.random()* 100000));\n  filters: any[] = [];\n  selectedFields = [];\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this._init();\n    // binding : datagrid -> datagrid-filter\n    // Le datagrid est en binding dans le 2 sens grace à [(searchValue)]=\"searchValue\"\n    // et le code qui suit\n    if (changes.searchValue) {\n        // console.log(\"changes.searchValue \"+this.searchValue);\n        $('#'+this.input_filter).val(changes.searchValue.currentValue);\n    }\n  }\n\n  _init() {\n\n    this.filters = [];\n    this.selectedFields = [];\n    for (let col of this.columns) {\n      if (col.extFilter === true) {\n        if (col.extFilterSelected) {\n          this.selectedFields.push(col.prop);\n        }\n        this.filters.push(Object.assign(col));\n      }\n    }\n    this.enableFocus();\n    \n    // console.log('filters =================================', this.filters, this.selectedFields)\n  }\n\n  ngOnInit(): void {\n    // console.log('ngOnInit =================================')\n    this._init();\n    M.updateTextFields(); \n    \n  }\n\n  clickChekbox(col) {\n    \n    // console.log(col);\n    col.extFilterSelected = !col.extFilterSelected;\n    this._init();\n    this.updateFilter(null);\n  }\n\n  enableFocus() {\n    if (this.selectedFields.length > 0) {\n      $('#'+this.input_filter).focus();\n    } else {\n      $('#'+this.input_filter).blur();\n    }\n  }\n\n  updateFilter(event:any) {\n    // console.log('updateFilter =================================',event);\n    \n    const val = $('#'+this.input_filter).val(); //event.target.value.toLowerCase();\n    // binding: datagrid-filter -> datagrid \n    // Le datagrid est en binding dans le 2 sens grace à [(searchValue)]=\"searchValue\"\n    // et le code qui suit\n    this.searchValue = val;\n    this.searchValueChange.emit(this.searchValue)\n    let e : MaDataGridFilterEvent = {\n      text: val, fields: this.selectedFields\n    }\n    this.filterChange.emit(e);\n  }\n\n}\n\n","import { QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { DataGridHeadFilterComponent } from './components/data-grid-head-filter/data-grid-head-filter.component';\nimport { MaDataGridFilterEvent, MaDataGridColumnOptions, MaDataGridSelectMethod, MaDataGridSelectEvent, MaDataGridHeadFilterEvent, MaDataGridSortedField } from './interfaces/ma-data-grid-options';\nimport { MaGridFilterComponent } from './ma-grid-filter.component';\nimport { FilterConditions, MaFilter } from \"@amn31/filter-multiple-conditions\"\n\n// import { PipeLengthPipe } from 'src/app/pipes/pipe-length.pipe';\n@Component({\n  selector: 'ma-data-grid',\n  //providers: [PipeLengthPipe],\n  templateUrl: './ma-data-grid.component.html',\n  styleUrls: ['./ma-data-grid.component.css'],\n\n})\nexport class MaDataGridComponent implements OnInit, OnChanges {\n\n  /*  \"columns\" element d'entrée\n     \"change\" element de sortir permettant de prendre en compte\n                   l'event OnChanges\n    <ma-data-grid [columns]=\"columns\"  [rows]=\"rows\" (change)=\"ChangeData($event)\"></ma-data-grid>\n */\n  @Input() columns: MaDataGridColumnOptions[] = [];\n  @Input() limit: number = 7;\n  @Input() canSelect: MaDataGridSelectMethod;\n  @Input() extFilter: boolean = false;\n  @Input() headFilter: boolean = false;\n  @Input() pagination: boolean = false;\n  @Input() page: number = -1;\n  @Input() count: number = 0;\n  @Input() customCSS:  string = \"\";\n  @Input() myGrid = this;\n\n  @Input() rows: any = [];\n  @Output() change = new EventEmitter<any>();\n  @Output() select = new EventEmitter<MaDataGridSelectEvent>();\n  @Output() extFilterChange = new EventEmitter<MaDataGridFilterEvent>();\n  @Output() filterChange = new EventEmitter<any>();\n  @Output() changePage = new EventEmitter<any>();\n  @Output() sort = new EventEmitter<MaDataGridSortedField>();\n  @Output() canSelectChange = new EventEmitter<MaDataGridSelectMethod>();\n  @Output() rowsChange = new EventEmitter<any>();\n  @Output() rowsSelect = new EventEmitter<any[]>();\n\n  @ViewChild(MaGridFilterComponent, { static: true }) gridfilter: MaGridFilterComponent;\n  @ViewChildren(DataGridHeadFilterComponent) headerfilter: QueryList<DataGridHeadFilterComponent>;\n\n  grid_cell_first = this.customCSS + 'grid_cell_first'\n  grid_row_selected = this.customCSS + 'grid_row_selected';\n  current_page: number = -1;\n  max_page: number = 1;\n  max_nb_page: number = 6;\n  nb_page: number = 1;\n  startat: number = 0;\n  searchValue: string = \"c\"\n  \n  rows_displayed: any = [];\n  pages = [];\n  conditions: FilterConditions = []\n  nb_record: number = 0;\n  row_selected: number = -1;\n  cell_selected: number = -1;\n\n  temp: any[];\n\n  @Input() sortedField: MaDataGridSortedField = {\n    field: '',\n    reverse: true\n  };\n\n  constructor(/*private pipeLength: PipeLengthPipe*/) { \n    //console.log('YO')\n  }\n\n  resetSelection() {\n    this.cell_selected = -1;\n    this.row_selected = -1;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // console.log(\"this.searchValue: \" + this.searchValue)\n    console.log('ngOnChanges ', changes);\n    if (changes.page && changes.page.currentValue >= 0) {\n    }\n    if (changes.canSelect && changes.canSelect.currentValue) {\n      //this.page = changes.page.currentValue;\n      // console.log('canSelect  ', changes.canSelect.currentValue);\n      this.canSelectChange.emit(changes.canSelect.previousValue)\n    }\n    if (changes.limit && changes.limit.currentValue) {\n      this.limit = changes.limit.currentValue;\n    }\n    if (changes.rows && changes.rows.currentValue) {\n      this.temp = changes.rows.currentValue;\n      this._changePage(this.current_page, this.temp, true);\n    }\n    // console.log(\"a - ngOnChanges current_page => \" + this.current_page)\n  }\n\n  IncrementPage() {\n    this._changePage(this.current_page + 1, this.temp)\n  }\n\n  DecrementPage() {\n    this._changePage(this.current_page - 1, this.temp)\n  }\n\n  FastIncrementPage() {\n    let p = this.current_page + 5; //Math.round(this.max_page / 50);\n    this._changePage(p, this.temp)\n  }\n\n  _dataChange (evt) {\n    // console.log(\"_dataChange\",evt);\n    this.rowsChange.emit(evt);\n  }\n\n  _dataSelector (evt,prop) {\n    // console.log(\"_dataSelector\",evt,prop);\n    if (typeof(evt) == 'object' && evt.length === undefined) {\n      this.rowsSelect.emit([evt]);\n    } else {\n      this.rowsSelect.emit(evt);\n    }\n    \n  }\n\n  FastDecrementPage() {\n    let p = this.current_page - 5; //Math.round(this.max_page / 50);;\n    this._changePage(p, this.temp)\n  }\n\n  private _changePage(n_page: number, rows?: any, force?: boolean) {\n    if (!rows)\n      rows = this.temp;\n\n    //\n\n    if (this.pagination == false) {\n      if (force === true) {\n        this.temp = MaFilter.FilterByConditions(this.conditions, rows);\n        this.temp = this._sortData(this.temp);\n        rows = this.temp;\n      }\n      this.count = rows.length;\n    }\n    // Calcul du max_page\n    this.max_page = 0;\n    if (this.count >= 0 && this.limit > 0) {\n      this.max_page = Math.floor(this.count / this.limit);\n      if ((this.count % this.limit) != 0) {\n        this.max_page += 1;\n      }\n    }\n    if (n_page < 0) {\n      n_page = 0;\n    }\n    if (n_page >= this.max_page && this.max_page > 0) {\n      n_page = this.max_page - 1;\n    }\n    // console.log(\"changePage \" + n_page + ' / ' + this.max_page + ' c => ' + this.current_page + ' max_page ' + this.max_page);\n\n    if (this.page >= 0 || this.pagination) {\n      if (this.current_page != n_page) {\n        this.current_page = n_page;\n        this.searchValue = '';\n        // console.log(\"=============> EMIT CHANGE \")\n        this.changePage.emit(n_page);\n        return;\n      }\n\n      this.row_selected = -1;\n      this.current_page = n_page;\n      this.nb_record = this.count;\n      this.startat = 0;\n      this.rows_displayed = [];\n      for (let i = 0; rows && i < this.limit && i < this.count && i < rows.length; i++) {\n        this.rows_displayed.push(rows[i]);\n      }\n\n    } else {\n\n      // SANS PAGINATION\n      // console.error(\"SANS PAGINATION\")\n      \n      if (!force && (this.current_page == n_page)) {\n        return;\n      }\n      this.row_selected = -1;\n      this.current_page = n_page;\n      this.nb_record = 0;\n      this.startat = 0;\n      this.rows_displayed = [];\n\n      for (let i = 0; rows && i < this.limit && i < rows.length; i++) {\n        if (rows.length > (this.current_page * this.limit) + i) {\n          this.rows_displayed.push(rows[this.current_page * this.limit + i]);\n        }\n      }\n      this.nb_record = rows.length;\n\n\n    }\n    // Calcul du nombre de page en bas du datagrid\n    this.startat = this.limit * (this.current_page + 1);\n    if (this.startat > this.count)\n      this.startat = this.count;\n    this.pages = [];\n    let start_page = this.current_page - Math.round(this.max_nb_page / 2);\n    if (start_page < 0)\n      start_page = 0;\n    for (let p = start_page, nbp = 0; rows && p < this.count / this.limit && nbp < this.max_nb_page; nbp++, p++) {\n      this.pages.push(p)\n    }\n\n  }\n\n  ngOnInit(): void {\n    //this.pipeLength.transform(\"bbb\");\n  }\n\n  private _sortData(rows) {\n    let sf = this.sortedField.field;\n    //console.log('_sortData',this.sortedField)\n    return rows.sort((a, b) => {\n\n      let r;\n\n      if (typeof (a[sf]) === 'string' || typeof (b[sf]) === 'string') {\n        var c3: string = a[sf];\n        var c4 : string= b[sf];\n        if (c4 == null) {\n          c4 = '';\n        }\n        if (c3 == null) {\n          c3 = '';\n        }\n        r = c3.localeCompare(c4, 'en', { sensitivity: 'base' });\n\n      } else {\n        if (typeof (a[sf]) === 'number' || typeof (b[sf]) === 'number' ) {\n          r = a[sf] - b[sf]\n        } else {\n          if (typeof (a[sf]) === 'boolean' || typeof (b[sf]) === 'boolean') {\n            var c1 = 0;\n            if (a[sf] === true)\n              c1 = 2;\n            if (a[sf] === false)\n              c1 = 1;\n            var c2 = 0;\n            if (b[sf] === true)\n              c2 = 2;\n            if (b[sf] === false)\n              c2 = 1;\n            r = c1 - c2;\n          } else {\n            r = a[sf] < b[sf]\n          }\n\n        }\n\n      }\n      //console.log('Compare ' + a[sf] + ' <=> ' + b[sf] + '  = ' + r + ' this.sortedField.reverse' + this.sortedField.reverse)\n      if (this.sortedField.reverse) {\n        return r * -1\n      }\n      return r\n    });\n\n  }\n\n  sortBy(col) {\n    // console.log(col);\n    if (this.sortedField.field == col.prop) {\n      this.sortedField.reverse = !this.sortedField.reverse\n    } else {\n      this.sortedField.reverse = false;\n    }\n    this.sortedField.field = col.prop;\n    if (this.pagination) {\n      this.sort.emit(this.sortedField);\n      return;\n    } else {\n\n      this._changePage(this.current_page, this.rows, true);\n    }\n\n  }\n\n  SelectRow(index, row) {\n    if (this.canSelect === \"row\") {\n      this.row_selected = index;\n      this.cell_selected = null;\n      let trueIndex = this.current_page * this.limit + index;\n      //let data = this.rows[trueIndex];\n      // console.log(\"SelectRow trueIndex\", trueIndex);\n      this.select.emit(<MaDataGridSelectEvent>{ index: trueIndex, row: row });\n    }\n  }\n\n  SelectCell(index, row, col) {\n    // console.log(\"SelectCell Select\", index, row, col);\n    if (this.canSelect === \"cell\") {\n      this.row_selected = index;\n      this.cell_selected = col.prop;\n      // console.log(\"SelectCell Select\", index, row, col);\n      let trueIndex = this.current_page * this.limit + index;\n      //console.log(\"Data Grid trueIndex\", trueIndex);\n      this.select.emit(<MaDataGridSelectEvent>{ index: trueIndex, row: row, prop: col.prop, value: row[col.prop], });\n    }\n  }\n\n  private _filterChange(e: MaDataGridFilterEvent) {\n    this.extFilterChange.emit(e);\n  }\n\n  timeout = null;\n  private _changeHeaderFilter(e: any) {\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      this._delayChangeHeaderFilter(e);\n    }, 500);\n  }\n\n  private _delayChangeHeaderFilter(e: any) {\n    let conditions = [];\n    this.headerfilter.forEach((item) => {\n      //item.filter_value;\n      let condition = item.getFilter();\n      if (condition) {\n        if (conditions.length > 0) {\n          conditions.push('and');\n        }\n        conditions.push(condition);\n      }\n      //console.log(item.col.prop + ' => '+item.filter_value);\n    })\n    // console.log(\"CONDITIONS\", conditions);\n    if (this.pagination == false) {\n      this.conditions = conditions;\n      this._changePage(0, this.rows, true);\n      this.filterChange.emit(<MaDataGridHeadFilterEvent>{ where: conditions, data: this.temp });\n    } else {\n      this.filterChange.emit(<MaDataGridHeadFilterEvent>{ where: conditions });\n    }\n\n\n  }\n\n}\n","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[libMaAnchorGridCell]'\n})\nexport class MaAnchorGridCellDirective {\n\n  constructor(public viewContainerRef: ViewContainerRef) { }\n\n}\n","import { ViewContainerRef } from '@angular/core';\nimport { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[libMaGridCellTemplate]'\n})\nexport class MaGridCellTemplateDirective {\n\n  constructor(public viewContainerRef: ViewContainerRef) { }\n\n}\n","import { EventEmitter, Type } from '@angular/core';\nimport { MaDataGridComponent } from '../../ma-data-grid.component';\n\n\nexport class DataGridCellItemComponent {\n  dataChange: EventEmitter<any>;\n\n  //dataChange = new EventEmitter<any>()\n\n  constructor(public component: Type<any>, public data: any, public col?:any, public prop?:string, public myGrid?:MaDataGridComponent) {\n   \n  }\n\n\n\n}\n","import { ComponentFactoryResolver, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { Type } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { MaGridCellTemplateDirective } from '../../directives/ma-grid-cell-template.directive';\nimport { MaDataGridComponent } from '../../ma-data-grid.component';\nimport { DataGridCellItemComponent } from '../data-grid-cell-item/data-grid-cell-item.component';\n\n\n@Component({\n  selector: 'ma-data-grid-template-cell-t1',\n  template: '<ng-template libMaGridCellTemplate></ng-template>'\n})\nexport class DataGridTemplateCellComponent implements OnInit {\n\n  @Input() data: any;\n  @Input() prop: any;\n  @Input() col: any;\n  @Input() template: Type<any>;\n  @Input() myGrid: MaDataGridComponent;\n  @Output() dataChange: EventEmitter<any>;// = new EventEmitter<any>();\n  @ViewChild(MaGridCellTemplateDirective, { static: true }) libMaGridCellTemplate: MaGridCellTemplateDirective;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) {\n    // console.log('DataGridTemplateCellComponent c',this.template, this.prop);\n  }\n\n  ngOnInit(): void {\n    // \n    if (!this.template) {\n      return;\n    }\n    const component = new DataGridCellItemComponent(this.template, this.data, this.col, this.prop, this.myGrid);\n\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(component.component);\n    if (!this.libMaGridCellTemplate) {\n      return;\n    }\n    const viewContainerRef = this.libMaGridCellTemplate.viewContainerRef;\n    const componentRef = viewContainerRef.createComponent<DataGridCellItemComponent>(componentFactory);\n    componentRef.instance.data = component.data;\n    componentRef.instance.prop = component.prop;\n    componentRef.instance.col = component.col;\n    componentRef.instance.dataChange = new EventEmitter<any>();\n    componentRef.instance.myGrid = component.myGrid;\n    componentRef.instance.dataChange?.subscribe(d => {\n      // console.log(\"DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD\", d);\n      if (componentRef.instance.myGrid != null) {\n        componentRef.instance.myGrid._dataChange(d);\n\n      }\n    });\n\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'maDataGridPipe'\n})\nexport class DataGridPipePipe implements PipeTransform {\n\n  transform(value: any, row?: any, col?:any): unknown {\n    if (col.pipe) {\n      return col.pipe(value,row,col)\n    }\n    return value;\n  }\n\n}\n","import { AfterViewInit, Component, Input, OnInit } from '@angular/core';\nimport { MaDataGridCell } from '../../interfaces/ma-data-grid-cell';\nimport { MaDataGridColumnOptions } from '../../interfaces/ma-data-grid-options';\n\n@Component({\n  selector: 'ma-data-grid-cell-boolean',\n  //template: '<div style=\"text-align: center\"><i class=\"tiny material-icons\">{{icon}}</i></div>'\n  template: '<div style=\"text-align: center\"><i *ngIf=\"data[col.prop] === true\" class=\"tiny material-icons\">check_box</i><i *ngIf=\"data[col.prop] === false\" class=\"tiny material-icons\">check_box_outline_blank</i></div>'\n})\nexport class DataGridCellBooleanComponent implements MaDataGridCell, OnInit {\n\n  @Input() data: any;\n  @Input() col: MaDataGridColumnOptions;\n\n  icon: string = '';\n\n  constructor() { }\n\n  ngOnInit(): void {\n    // console.log(this.data[this.col.prop]);\n    // if (this.data[this.col.prop] === true) {\n    //   this.icon = 'check_box'\n    // } else if (this.data[this.col.prop] === false) {\n    //   this.icon = 'check_box_outline_blank'\n    // }\n  }\n\n}\n","import { Component, ElementRef, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { MaDataGridCell } from '../../interfaces/ma-data-grid-cell';\nimport { MaDataGridColumnOptions } from '../../interfaces/ma-data-grid-options';\nimport { MaDataGridComponent } from '../../ma-data-grid.component';\n\n@Component({\n  selector: 'ma-data-grid-celledit-item',\n  templateUrl: './data-grid-celledit-item.component.html',\n  styleUrls: ['./data-grid-celledit-item.component.css']\n})\nexport class DataGridCelleditItemComponent implements MaDataGridCell, OnInit, OnChanges {\n\n  @ViewChild(\"myInput\", { static: false }) myInput: ElementRef;\n  @ViewChild(\"myInputCheckbox\", { static: false }) myInputCheckbox: ElementRef;\n\n  constructor() { }\n\n  value: string = '';\n  \n\n  @Output() dataChange = new EventEmitter<any>();\n  @Input() data: any;\n  @Input() col: MaDataGridColumnOptions;\n  @Input() prop: string;\n  @Input() myGrid: MaDataGridComponent;\n\n  ngOnInit(): void {\n    if (this.col && this.col.dataType == 'boolean' ) {\n      if (this.data && (this.data[this.prop] == true || this.data[this.prop] == 1 || this.data[this.prop] == \"on\")) {\n        this.data[this.prop] = true;\n      }\n    }\n  }\n\n  onPress(evt) {\n    //console.log(evt);\n    if (evt.Key == 'Enter') {\n      this.onChange();\n    }\n  }\n  \n  onChange () {\n    // console.log('elem',this.myInput.nativeElement);\n    let emitEvent = true;\n    if (this.col && this.col.dataType == 'number') {\n      let s = this.myInput.nativeElement.value as string;\n      if (s.match(/^[0-9]+$/)) {\n        this.data[this.prop] = parseInt(this.myInput.nativeElement.value);\n      } else {\n        emitEvent = false;\n        this.myInput.nativeElement.value = this.data[this.prop];\n      }\n    } else  if (this.col && this.col.dataType == 'float') {\n      let s = this.myInput.nativeElement.value as string;\n      if (s.match(/^[0-9]+\\.{0,1}[0-9]*$/)) {\n        this.data[this.prop] = parseFloat(this.myInput.nativeElement.value);\n      } else {\n        emitEvent = false;\n        this.myInput.nativeElement.value = this.data[this.prop];\n      }\n    } else if (this.col && this.col.dataType == 'date') {\n      try {\n        let d= new Date(this.myInput.nativeElement.value).toISOString().replace(/T.+/,'');\n        this.data[this.prop] = d;\n      } catch(e) {\n        emitEvent = false; \n        this.myInput.nativeElement.value = this.data[this.prop];\n      }\n    } else if (this.col && (this.col.dataType == 'boolean' || this.col.dataType == 'bool')) {\n      this.data[this.prop] = this.myInput.nativeElement.checked;\n    } else {\n      this.data[this.prop] = this.myInput.nativeElement.value;\n    }\n    \n    if (emitEvent) {\n      // console.log('EMIT dataChange',this.data);\n      this.dataChange.emit(this.data);\n      if (this.myGrid != null) {\n        this.myGrid._dataChange(this.data);\n      }\n    }\n    \n  }\n\n  onChangeCheckbox () {\n    // console.log('elem',this.myInputCheckbox.nativeElement);\n    this.data[this.prop] = this.myInputCheckbox.nativeElement.checked;\n    // console.log('EMIT dataChange',this.data);\n    this.dataChange.emit(this.data);\n    if (this.myGrid != null) {\n      this.myGrid._dataChange(this.data);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // console.log('DataGridCelleditItem ngOnChanges',changes)\n  }\n\n}\n","import { Component, ElementRef, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { MaDataGridColumnOptions } from '../../interfaces/ma-data-grid-options';\nimport { MaDataGridComponent } from '../../ma-data-grid.component';\n\n@Component({\n  selector: 'ma-data-grid-cell-selector',\n  templateUrl: './data-grid-cell-selector.component.html',\n  styleUrls: ['./data-grid-cell-selector.component.css']\n})\nexport class DataGridCellSelectorComponent implements OnInit, OnChanges {\n\n  @ViewChild(\"myInputSelectorBox\", { static: false }) myInputSelectorBox: ElementRef;\n  title: string = '';\n  @Output() dataChange = new EventEmitter<any>();\n  @Input() data: any;\n  @Input() isHeader: boolean = false;\n  @Input() col: MaDataGridColumnOptions;\n  @Input() prop: string;\n  @Input() myGrid: MaDataGridComponent;\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n    /* Cas du header pas de prop */\n    if(this.isHeader) {\n      this.title = this.col.title;\n    } else {\n      this.title = '';\n    }\n    \n    if (this.data && (this.data[this.prop] == true || this.data[this.prop] == 1 || this.data[this.prop] == \"on\")) {\n      this.data[this.prop] = true;\n    }\n  }\n\n  onChangeCheckbox() {\n    if(this.isHeader) {\n      for (let row of this.data) {\n        row[this.prop] = this.myInputSelectorBox.nativeElement.checked;\n      }\n    } else {\n      this.data[this.prop] = this.myInputSelectorBox.nativeElement.checked;\n      // console.log('EMIT SELECTOR dataChange', this.data);\n    }\n   \n    this.dataChange.emit(this.data);\n    if (this.myGrid != null) {\n      this.myGrid._dataSelector(this.data,this.prop);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // console.log('SELECTOR ngOnChanges',changes)\n  }\n}\n","import { Component, NgModule } from '@angular/core';\nimport { MaDataGridComponent } from './ma-data-grid.component';\nimport { MaAnchorGridCellDirective } from './directives/ma-anchor-grid-cell.directive';\nimport { DataGridTemplateCellComponent } from './components/data-grid-template-cell/data-grid-template-cell.component';\nimport { DataGridPipePipe } from './pipes/data-grid-pipe.pipe';\nimport { CommonModule } from '@angular/common';\nimport { MaGridFilterComponent } from './ma-grid-filter.component';\nimport { DataGridHeadFilterComponent } from './components/data-grid-head-filter/data-grid-head-filter.component';\nimport { DataGridPickerDateComponent } from './components/data-grid-picker-date/data-grid-picker-date.component';\nimport { DataGridOpFilterComponent } from './components/data-grid-op-filter/data-grid-op-filter.component';\nimport { FormsModule } from '@angular/forms';\nimport { DataGridCellBooleanComponent } from './components/data-grid-cell-boolean/data-grid-cell-boolean.component';\nimport { MaGridCellTemplateDirective } from './directives/ma-grid-cell-template.directive';\nimport { DataGridCelleditItemComponent } from './components/data-grid-celledit-item/data-grid-celledit-item.component';\nimport { DataGridCellSelectorComponent } from './components/data-grid-cell-selector/data-grid-cell-selector.component';\nimport * as M from 'materialize-css';\n\n@NgModule({\n  declarations: [\n    MaDataGridComponent, \n    MaAnchorGridCellDirective, \n    DataGridTemplateCellComponent, \n    DataGridPipePipe,\n    MaGridFilterComponent,\n    DataGridHeadFilterComponent,\n    DataGridOpFilterComponent,\n    DataGridPickerDateComponent,\n    DataGridCellBooleanComponent,\n    MaGridCellTemplateDirective,\n    DataGridCelleditItemComponent,\n    DataGridCellSelectorComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  exports: [\n    /* Ajouter CommonModule pour éviter les erreurs \n        Can't bind to 'ngClass' since it isn't a known property */\n    MaDataGridComponent,\n    MaGridFilterComponent\n    \n  ]\n})\n//export var  M;\nexport class MaDataGridModule { }\n"]}